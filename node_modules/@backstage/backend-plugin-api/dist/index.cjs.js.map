{"version":3,"file":"index.cjs.js","sources":["../src/services/system/types.ts","../src/services/definitions/configServiceRef.ts","../src/services/definitions/httpRouterServiceRef.ts","../src/services/definitions/loggerServiceRef.ts","../src/services/definitions/urlReaderServiceRef.ts","../src/services/definitions/cacheServiceRef.ts","../src/services/definitions/databaseServiceRef.ts","../src/services/definitions/discoveryServiceRef.ts","../src/services/definitions/tokenManagerServiceRef.ts","../src/services/definitions/permissionsServiceRef.ts","../src/services/definitions/schedulerServiceRef.ts","../src/services/definitions/rootLoggerServiceRef.ts","../src/services/definitions/pluginMetadataServiceRef.ts","../src/services/definitions/lifecycleServiceRef.ts","../src/services/helpers/loggerToWinstonLogger.ts","../src/wiring/factories.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO\n *\n * @public\n */\nexport type ServiceRef<\n  TService,\n  TScope extends 'root' | 'plugin' = 'root' | 'plugin',\n> = {\n  id: string;\n\n  /**\n   * This determines the scope at which this service is available.\n   *\n   * Root scoped services are available to all other services but\n   * may only depend on other root scoped services.\n   *\n   * Plugin scoped services are only available to other plugin scoped\n   * services but may depend on all other services.\n   */\n  scope: TScope;\n\n  /**\n   * Utility for getting the type of the service, using `typeof serviceRef.T`.\n   * Attempting to actually read this value will result in an exception.\n   */\n  T: TService;\n\n  toString(): string;\n\n  $$ref: 'service';\n};\n\n/** @public */\nexport type TypesToServiceRef<T> = { [key in keyof T]: ServiceRef<T[key]> };\n\n/** @public */\nexport type ServiceFactory<TService = unknown> =\n  | {\n      // This scope prop is needed in addition to the service ref, as TypeScript\n      // can't properly discriminate the two factory types otherwise.\n      scope: 'root';\n      service: ServiceRef<TService, 'root'>;\n      deps: { [key in string]: ServiceRef<unknown> };\n      factory(deps: { [key in string]: unknown }): Promise<TService>;\n    }\n  | {\n      scope: 'plugin';\n      service: ServiceRef<TService, 'plugin'>;\n      deps: { [key in string]: ServiceRef<unknown> };\n      factory(deps: { [key in string]: unknown }): Promise<\n        (deps: { [key in string]: unknown }) => Promise<TService>\n      >;\n    };\n\n/** @public */\nexport function createServiceRef<T>(options: {\n  id: string;\n  scope?: 'plugin';\n  defaultFactory?: (\n    service: ServiceRef<T, 'plugin'>,\n  ) => Promise<ServiceFactory<T> | (() => ServiceFactory<T>)>;\n}): ServiceRef<T, 'plugin'>;\n/** @public */\nexport function createServiceRef<T>(options: {\n  id: string;\n  scope: 'root';\n  defaultFactory?: (\n    service: ServiceRef<T, 'root'>,\n  ) => Promise<ServiceFactory<T> | (() => ServiceFactory<T>)>;\n}): ServiceRef<T, 'root'>;\nexport function createServiceRef<T>(options: {\n  id: string;\n  scope?: 'plugin' | 'root';\n  defaultFactory?:\n    | ((\n        service: ServiceRef<T, 'plugin'>,\n      ) => Promise<ServiceFactory<T> | (() => ServiceFactory<T>)>)\n    | ((\n        service: ServiceRef<T, 'root'>,\n      ) => Promise<ServiceFactory<T> | (() => ServiceFactory<T>)>);\n}): ServiceRef<T> {\n  const { id, scope = 'plugin', defaultFactory } = options;\n  return {\n    id,\n    scope,\n    get T(): T {\n      throw new Error(`tried to read ServiceRef.T of ${this}`);\n    },\n    toString() {\n      return `serviceRef{${options.id}}`;\n    },\n    $$ref: 'service', // TODO: declare\n    __defaultFactory: defaultFactory,\n  } as ServiceRef<T, typeof scope> & {\n    __defaultFactory?: (\n      service: ServiceRef<T>,\n    ) => Promise<ServiceFactory<T> | (() => ServiceFactory<T>)>;\n  };\n}\n\n/** @ignore */\ntype ServiceRefsToInstances<\n  T extends { [key in string]: ServiceRef<unknown> },\n  TScope extends 'root' | 'plugin' = 'root' | 'plugin',\n> = {\n  [name in {\n    [key in keyof T]: T[key] extends ServiceRef<unknown, TScope> ? key : never;\n  }[keyof T]]: T[name] extends ServiceRef<infer TImpl> ? TImpl : never;\n};\n\n/**\n * @public\n */\nexport function createServiceFactory<\n  TService,\n  TScope extends 'root' | 'plugin',\n  TImpl extends TService,\n  TDeps extends { [name in string]: ServiceRef<unknown> },\n  TOpts extends object | undefined = undefined,\n>(config: {\n  service: ServiceRef<TService, TScope>;\n  deps: TDeps;\n  factory(\n    deps: ServiceRefsToInstances<TDeps, 'root'>,\n    options: TOpts,\n  ): TScope extends 'root'\n    ? Promise<TImpl>\n    : Promise<(deps: ServiceRefsToInstances<TDeps>) => Promise<TImpl>>;\n}): undefined extends TOpts\n  ? (options?: TOpts) => ServiceFactory<TService>\n  : (options: TOpts) => ServiceFactory<TService> {\n  return (options?: TOpts) =>\n    ({\n      scope: config.service.scope,\n      service: config.service,\n      deps: config.deps,\n      factory(deps: ServiceRefsToInstances<TDeps, 'root'>) {\n        return config.factory(deps, options!);\n      },\n    } as ServiceFactory<TService>);\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { createServiceRef } from '../system/types';\n\n/**\n * @public\n */\nexport type ConfigService = Config;\n\n/**\n * @public\n */\nexport const configServiceRef = createServiceRef<ConfigService>({\n  id: 'core.root.config',\n  scope: 'root',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { Handler } from 'express';\n\n/**\n * @public\n */\nexport interface HttpRouterService {\n  use(handler: Handler): void;\n}\n\n/**\n * @public\n */\nexport const httpRouterServiceRef = createServiceRef<HttpRouterService>({\n  id: 'core.httpRouter',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\n\n/**\n * @public\n */\nexport type LogMeta = { [name: string]: unknown };\n\n/**\n * @public\n */\nexport interface LoggerService {\n  error(message: string, meta?: Error | LogMeta): void;\n  warn(message: string, meta?: Error | LogMeta): void;\n  info(message: string, meta?: Error | LogMeta): void;\n  debug(message: string, meta?: Error | LogMeta): void;\n\n  child(meta: LogMeta): LoggerService;\n}\n\n/**\n * @public\n */\nexport const loggerServiceRef = createServiceRef<LoggerService>({\n  id: 'core.logger',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { UrlReader } from '@backstage/backend-common';\n\n/** @public */\nexport type UrlReaderService = UrlReader;\n\n/**\n * @public\n */\nexport const urlReaderServiceRef = createServiceRef<UrlReaderService>({\n  id: 'core.urlReader',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { PluginCacheManager } from '@backstage/backend-common';\n\n/** @public */\nexport type CacheService = PluginCacheManager;\n\n/**\n * @public\n */\nexport const cacheServiceRef = createServiceRef<CacheService>({\n  id: 'core.cache',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PluginDatabaseManager } from '@backstage/backend-common';\nimport { createServiceRef } from '../system/types';\n\n/** @public */\nexport type DatabaseService = PluginDatabaseManager;\n\n/**\n * @public\n */\nexport const databaseServiceRef = createServiceRef<DatabaseService>({\n  id: 'core.database',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { PluginEndpointDiscovery } from '@backstage/backend-common';\n\n/** @public */\nexport type DiscoveryService = PluginEndpointDiscovery;\n\n/**\n * @public\n */\nexport const discoveryServiceRef = createServiceRef<DiscoveryService>({\n  id: 'core.discovery',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { TokenManager } from '@backstage/backend-common';\n\n/** @public */\nexport type TokenManagerService = TokenManager;\n\n/**\n * @public\n */\nexport const tokenManagerServiceRef = createServiceRef<TokenManagerService>({\n  id: 'core.tokenManager',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport {\n  PermissionAuthorizer,\n  PermissionEvaluator,\n} from '@backstage/plugin-permission-common';\n\n/** @public */\nexport type PermissionsService = PermissionEvaluator | PermissionAuthorizer;\n\n/**\n * @public\n */\nexport const permissionsServiceRef = createServiceRef<PermissionsService>({\n  id: 'core.permissions',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { PluginTaskScheduler } from '@backstage/backend-tasks';\n\n/** @public */\nexport type SchedulerService = PluginTaskScheduler;\n\n/**\n * @public\n */\nexport const schedulerServiceRef = createServiceRef<SchedulerService>({\n  id: 'core.scheduler',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\nimport { LoggerService } from './loggerServiceRef';\n\n/** @public */\nexport type RootLoggerService = LoggerService;\n\n/**\n * @public\n */\nexport const rootLoggerServiceRef = createServiceRef<RootLoggerService>({\n  id: 'core.root.logger',\n  scope: 'root',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\n\n/**\n * @public\n */\nexport interface PluginMetadataService {\n  getId(): string;\n}\n\n/**\n * @public\n */\nexport const pluginMetadataServiceRef = createServiceRef<PluginMetadataService>(\n  {\n    id: 'core.plugin-metadata',\n  },\n);\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createServiceRef } from '../system/types';\n\n/**\n * @public\n **/\nexport type LifecycleServiceShutdownHook = {\n  fn: () => void | Promise<void>;\n};\n\n/**\n * @public\n **/\nexport interface LifecycleService {\n  /**\n   * Register a function to be called when the backend is shutting down.\n   */\n  addShutdownHook(options: LifecycleServiceShutdownHook): void;\n}\n\n/**\n * @public\n */\nexport const lifecycleServiceRef = createServiceRef<LifecycleService>({\n  id: 'core.lifecycle',\n  scope: 'plugin',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerService } from '../definitions';\nimport { Logger as WinstonLogger, createLogger } from 'winston';\nimport Transport, { TransportStreamOptions } from 'winston-transport';\n\nclass BackstageLoggerTransport extends Transport {\n  constructor(\n    private readonly backstageLogger: LoggerService,\n    opts?: TransportStreamOptions,\n  ) {\n    super(opts);\n  }\n\n  log(info: unknown, callback: VoidFunction) {\n    if (typeof info !== 'object' || info === null) {\n      callback();\n      return;\n    }\n    const { level, message, ...meta } = info as { [name: string]: unknown };\n    switch (level) {\n      case 'error':\n        this.backstageLogger.error(String(message), meta);\n        break;\n      case 'warn':\n        this.backstageLogger.warn(String(message), meta);\n        break;\n      case 'info':\n        this.backstageLogger.info(String(message), meta);\n        break;\n      case 'debug':\n        this.backstageLogger.debug(String(message), meta);\n        break;\n      default:\n        this.backstageLogger.info(String(message), meta);\n    }\n    callback();\n  }\n}\n\n/** @public */\nexport function loggerToWinstonLogger(\n  logger: LoggerService,\n  opts?: TransportStreamOptions,\n): WinstonLogger {\n  return createLogger({\n    transports: [new BackstageLoggerTransport(logger, opts)],\n  });\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackendRegistrationPoints,\n  BackendFeature,\n  ExtensionPoint,\n} from './types';\n\n/** @public */\nexport function createExtensionPoint<T>(options: {\n  id: string;\n}): ExtensionPoint<T> {\n  return {\n    id: options.id,\n    get T(): T {\n      throw new Error(`tried to read ExtensionPoint.T of ${this}`);\n    },\n    toString() {\n      return `extensionPoint{${options.id}}`;\n    },\n    $$ref: 'extension-point', // TODO: declare\n  };\n}\n\n/** @public */\nexport interface BackendPluginConfig<TOptions> {\n  id: string;\n  register(reg: BackendRegistrationPoints, options: TOptions): void;\n}\n\n/** @public */\nexport function createBackendPlugin<\n  TOptions extends object | undefined = undefined,\n>(config: {\n  id: string;\n  register(reg: BackendRegistrationPoints, options: TOptions): void;\n}): undefined extends TOptions\n  ? (options?: TOptions) => BackendFeature\n  : (options: TOptions) => BackendFeature {\n  return (options?: TOptions) => ({\n    id: config.id,\n    register(register: BackendRegistrationPoints) {\n      return config.register(register, options!);\n    },\n  });\n}\n\n/** @public */\nexport interface BackendModuleConfig<TOptions> {\n  pluginId: string;\n  moduleId: string;\n  register(\n    reg: Omit<BackendRegistrationPoints, 'registerExtensionPoint'>,\n    options: TOptions,\n  ): void;\n}\n\n/**\n * @public\n *\n * Creates a new backend module for a given plugin.\n *\n * The `moduleId` should be equal to the module-specific prefix of the exported name, such\n * that the full name is `moduleId + PluginId + \"Module\"`. For example, a GitHub entity\n * provider module for the `catalog` plugin might have the module ID `'githubEntityProvider'`,\n * and the full exported name would be `githubEntityProviderCatalogModule`.\n *\n * The `pluginId` should exactly match the `id` of the plugin that the module extends.\n */\nexport function createBackendModule<\n  TOptions extends object | undefined = undefined,\n>(\n  config: BackendModuleConfig<TOptions>,\n): undefined extends TOptions\n  ? (options?: TOptions) => BackendFeature\n  : (options: TOptions) => BackendFeature {\n  return (options?: TOptions) => ({\n    id: `${config.pluginId}.${config.moduleId}`,\n    register(register: BackendRegistrationPoints) {\n      // TODO: Hide registerExtensionPoint\n      return config.register(register, options!);\n    },\n  });\n}\n"],"names":["Transport","createLogger"],"mappings":"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"}