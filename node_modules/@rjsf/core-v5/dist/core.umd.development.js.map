{"version":3,"file":"core.umd.development.js","sources":["../src/components/fields/ArrayField.tsx","../src/components/fields/BooleanField.tsx","../src/components/fields/MultiSchemaField.tsx","../src/components/fields/NumberField.tsx","../src/components/fields/ObjectField.tsx","../src/components/fields/SchemaField.tsx","../src/components/fields/StringField.tsx","../src/components/fields/NullField.tsx","../src/components/fields/index.ts","../src/components/templates/ArrayFieldDescriptionTemplate.tsx","../src/components/templates/ArrayFieldItemTemplate.tsx","../src/components/templates/ArrayFieldTemplate.tsx","../src/components/templates/ArrayFieldTitleTemplate.tsx","../src/components/templates/BaseInputTemplate.tsx","../src/components/templates/ButtonTemplates/SubmitButton.tsx","../src/components/templates/ButtonTemplates/IconButton.tsx","../src/components/templates/ButtonTemplates/AddButton.tsx","../src/components/templates/ButtonTemplates/index.ts","../src/components/templates/DescriptionField.tsx","../src/components/templates/ErrorList.tsx","../src/components/templates/FieldTemplate/Label.tsx","../src/components/templates/FieldTemplate/FieldTemplate.tsx","../src/components/templates/FieldErrorTemplate.tsx","../src/components/templates/FieldHelpTemplate.tsx","../src/components/templates/ObjectFieldTemplate.tsx","../src/components/templates/TitleField.tsx","../src/components/templates/UnsupportedField.tsx","../src/components/templates/WrapIfAdditionalTemplate.tsx","../src/components/templates/index.ts","../src/components/widgets/AltDateWidget.tsx","../src/components/widgets/AltDateTimeWidget.tsx","../src/components/widgets/CheckboxWidget.tsx","../src/components/widgets/CheckboxesWidget.tsx","../src/components/widgets/ColorWidget.tsx","../src/components/widgets/DateWidget.tsx","../src/components/widgets/DateTimeWidget.tsx","../src/components/widgets/EmailWidget.tsx","../src/components/widgets/FileWidget.tsx","../src/components/widgets/HiddenWidget.tsx","../src/components/widgets/PasswordWidget.tsx","../src/components/widgets/RadioWidget.tsx","../src/components/widgets/RangeWidget.tsx","../src/components/widgets/SelectWidget.tsx","../src/components/widgets/TextareaWidget.tsx","../src/components/widgets/TextWidget.tsx","../src/components/widgets/URLWidget.tsx","../src/components/widgets/UpDownWidget.tsx","../src/components/widgets/index.ts","../src/getDefaultRegistry.ts","../src/components/Form.tsx","../src/withTheme.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  getTemplate,\n  getWidget,\n  getUiOptions,\n  isFixedItems,\n  allowAdditionalItems,\n  isCustomWidget,\n  optionsList,\n  ArrayFieldTemplateProps,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  UiSchema,\n  ITEMS_KEY,\n} from \"@rjsf/utils\";\nimport get from \"lodash/get\";\nimport isObject from \"lodash/isObject\";\nimport set from \"lodash/set\";\nimport { nanoid } from \"nanoid\";\n\n/** Type used to represent the keyed form data used in the state */\ntype KeyedFormDataType<T> = { key: string; item: T };\n\n/** Type used for the state of the `ArrayField` component */\ntype ArrayFieldState<T> = {\n  /** The keyed form data elements */\n  keyedFormData: KeyedFormDataType<T>[];\n  /** Flag indicating whether any of the keyed form data has been updated */\n  updatedKeyedFormData: boolean;\n};\n\n/** Used to generate a unique ID for an element in a row */\nfunction generateRowId() {\n  return nanoid();\n}\n\n/** Converts the `formData` into `KeyedFormDataType` data, using the `generateRowId()` function to create the key\n *\n * @param formData - The data for the form\n * @returns - The `formData` converted into a `KeyedFormDataType` element\n */\nfunction generateKeyedFormData<T>(formData: T[]): KeyedFormDataType<T>[] {\n  return !Array.isArray(formData)\n    ? []\n    : formData.map((item) => {\n        return {\n          key: generateRowId(),\n          item,\n        };\n      });\n}\n\n/** Converts `KeyedFormDataType` data into the inner `formData`\n *\n * @param keyedFormData - The `KeyedFormDataType` to be converted\n * @returns - The inner `formData` item(s) in the `keyedFormData`\n */\nfunction keyedToPlainFormData<T>(\n  keyedFormData: KeyedFormDataType<T> | KeyedFormDataType<T>[]\n): T[] {\n  if (Array.isArray(keyedFormData)) {\n    return keyedFormData.map((keyedItem) => keyedItem.item);\n  }\n  return [];\n}\n\n/** The `ArrayField` component is used to render a field in the schema that is of type `array`. It supports both normal\n * and fixed array, allowing user to add and remove elements from the array data.\n */\nclass ArrayField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FieldProps<T[], S, F>, ArrayFieldState<T>> {\n  /** Constructs an `ArrayField` from the `props`, generating the initial keyed data from the `formData`\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T[], S, F>) {\n    super(props);\n    const { formData = [] } = props;\n    const keyedFormData = generateKeyedFormData<T>(formData);\n    this.state = {\n      keyedFormData,\n      updatedKeyedFormData: false,\n    };\n  }\n\n  /** React lifecycle method that is called when the props are about to change allowing the state to be updated. It\n   * regenerates the keyed form data and returns it\n   *\n   * @param nextProps - The next set of props data\n   * @param prevState - The previous set of state data\n   */\n  static getDerivedStateFromProps<\n    T = any,\n    S extends StrictRJSFSchema = RJSFSchema,\n    F extends FormContextType = any\n  >(\n    nextProps: Readonly<FieldProps<T[], S, F>>,\n    prevState: Readonly<ArrayFieldState<T>>\n  ) {\n    // Don't call getDerivedStateFromProps if keyed formdata was just updated.\n    if (prevState.updatedKeyedFormData) {\n      return {\n        updatedKeyedFormData: false,\n      };\n    }\n    const nextFormData = Array.isArray(nextProps.formData)\n      ? nextProps.formData\n      : [];\n    const previousKeyedFormData = prevState.keyedFormData || [];\n    const newKeyedFormData =\n      nextFormData.length === previousKeyedFormData.length\n        ? previousKeyedFormData.map((previousKeyedFormDatum, index) => {\n            return {\n              key: previousKeyedFormDatum.key,\n              item: nextFormData[index],\n            };\n          })\n        : generateKeyedFormData<T>(nextFormData);\n    return {\n      keyedFormData: newKeyedFormData,\n    };\n  }\n\n  /** Returns the appropriate title for an item by getting first the title from the schema.items, then falling back to\n   * the description from the schema.items, and finally the string \"Item\"\n   */\n  get itemTitle() {\n    const { schema } = this.props;\n    return get(\n      schema,\n      [ITEMS_KEY, \"title\"],\n      get(schema, [ITEMS_KEY, \"description\"], \"Item\")\n    );\n  }\n\n  /** Determines whether the item described in the schema is always required, which is determined by whether any item\n   * may be null.\n   *\n   * @param itemSchema - The schema for the item\n   * @return - True if the item schema type does not contain the \"null\" type\n   */\n  isItemRequired(itemSchema: S) {\n    if (Array.isArray(itemSchema.type)) {\n      // While we don't yet support composite/nullable jsonschema types, it's\n      // future-proof to check for requirement against these.\n      return !itemSchema.type.includes(\"null\");\n    }\n    // All non-null array item types are inherently required by design\n    return itemSchema.type !== \"null\";\n  }\n\n  /** Determines whether more items can be added to the array. If the uiSchema indicates the array doesn't allow adding\n   * then false is returned. Otherwise, if the schema indicates that there are a maximum number of items and the\n   * `formData` matches that value, then false is returned, otherwise true is returned.\n   *\n   * @param formItems - The list of items in the form\n   * @returns - True if the item is addable otherwise false\n   */\n  canAddItem(formItems: any[]) {\n    const { schema, uiSchema } = this.props;\n    let { addable } = getUiOptions<T[], S, F>(uiSchema);\n    if (addable !== false) {\n      // if ui:options.addable was not explicitly set to false, we can add\n      // another item if we have not exceeded maxItems yet\n      if (schema.maxItems !== undefined) {\n        addable = formItems.length < schema.maxItems;\n      } else {\n        addable = true;\n      }\n    }\n    return addable;\n  }\n\n  /** Returns the default form information for an item based on the schema for that item. Deals with the possibility\n   * that the schema is fixed and allows additional items.\n   */\n  _getNewFormDataRow = (): T => {\n    const { schema, registry } = this.props;\n    const { schemaUtils } = registry;\n    let itemSchema = schema.items as S;\n    if (isFixedItems(schema) && allowAdditionalItems(schema)) {\n      itemSchema = schema.additionalItems as S;\n    }\n    // Cast this as a T to work around schema utils being for T[] caused by the FieldProps<T[], S, F> call on the class\n    return schemaUtils.getDefaultFormState(itemSchema) as unknown as T;\n  };\n\n  /** Callback handler for when the user clicks on the add button. Creates a new row of keyed form data at the end of\n   * the list, adding it into the state, and then returning `onChange()` with the plain form data converted from the\n   * keyed data\n   *\n   * @param event - The event for the click\n   */\n  onAddClick = (event: MouseEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { onChange } = this.props;\n    const { keyedFormData } = this.state;\n    const newKeyedFormDataRow: KeyedFormDataType<T> = {\n      key: generateRowId(),\n      item: this._getNewFormDataRow(),\n    };\n    const newKeyedFormData = [...keyedFormData, newKeyedFormDataRow];\n    this.setState(\n      {\n        keyedFormData: newKeyedFormData,\n        updatedKeyedFormData: true,\n      },\n      () => onChange(keyedToPlainFormData(newKeyedFormData))\n    );\n  };\n\n  /** Callback handler for when the user clicks on the add button on an existing array element. Creates a new row of\n   * keyed form data inserted at the `index`, adding it into the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the add button is clicked\n   */\n  onAddIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange } = this.props;\n      const { keyedFormData } = this.state;\n      const newKeyedFormDataRow: KeyedFormDataType<T> = {\n        key: generateRowId(),\n        item: this._getNewFormDataRow(),\n      };\n      const newKeyedFormData = [...keyedFormData];\n      newKeyedFormData.splice(index, 0, newKeyedFormDataRow);\n\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData))\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on the remove button on an existing array element. Removes the row of\n   * keyed form data at the `index` in the state, and then returning `onChange()` with the plain form data converted\n   * from the keyed data\n   *\n   * @param index - The index at which the remove button is clicked\n   */\n  onDropIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange, errorSchema } = this.props;\n      const { keyedFormData } = this.state;\n      // refs #195: revalidate to ensure properly reindexing errors\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i < index) {\n            set(newErrorSchema, [i], errorSchema[idx]);\n          } else if (i > index) {\n            set(newErrorSchema, [i - 1], errorSchema[idx]);\n          }\n        }\n      }\n      const newKeyedFormData = keyedFormData.filter((_, i) => i !== index);\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () =>\n          onChange(\n            keyedToPlainFormData(newKeyedFormData),\n            newErrorSchema as ErrorSchema<T[]>\n          )\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on one of the move item buttons on an existing array element. Moves the\n   * row of keyed form data at the `index` to the `newIndex` in the state, and then returning `onChange()` with the\n   * plain form data converted from the keyed data\n   *\n   * @param index - The index of the item to move\n   * @param newIndex - The index to where the item is to be moved\n   */\n  onReorderClick = (index: number, newIndex: number) => {\n    return (event: React.MouseEvent<HTMLButtonElement>) => {\n      if (event) {\n        event.preventDefault();\n        event.currentTarget.blur();\n      }\n      const { onChange, errorSchema } = this.props;\n      let newErrorSchema: ErrorSchema<T>;\n      if (this.props.errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i == index) {\n            set(newErrorSchema, [newIndex], errorSchema[index]);\n          } else if (i == newIndex) {\n            set(newErrorSchema, [index], errorSchema[newIndex]);\n          } else {\n            set(newErrorSchema, [idx], errorSchema[i]);\n          }\n        }\n      }\n\n      const { keyedFormData } = this.state;\n      function reOrderArray() {\n        // Copy item\n        const _newKeyedFormData = keyedFormData.slice();\n\n        // Moves item from index to newIndex\n        _newKeyedFormData.splice(index, 1);\n        _newKeyedFormData.splice(newIndex, 0, keyedFormData[index]);\n\n        return _newKeyedFormData;\n      }\n      const newKeyedFormData = reOrderArray();\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n        },\n        () =>\n          onChange(\n            keyedToPlainFormData(newKeyedFormData),\n            newErrorSchema as ErrorSchema<T[]>\n          )\n      );\n    };\n  };\n\n  /** Callback handler used to deal with changing the value of the data in the array at the `index`. Calls the\n   * `onChange` callback with the updated form data\n   *\n   * @param index - The index of the item being changed\n   */\n  onChangeForIndex = (index: number) => {\n    return (value: any, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      const arrayData = Array.isArray(formData) ? formData : [];\n      const newFormData = arrayData.map((item: T, i: number) => {\n        // We need to treat undefined items as nulls to have validation.\n        // See https://github.com/tdegrunt/jsonschema/issues/206\n        const jsonValue = typeof value === \"undefined\" ? null : value;\n        return index === i ? jsonValue : item;\n      });\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [index]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Callback handler used to change the value for a checkbox */\n  onSelectChange = (value: any) => {\n    const { onChange, idSchema } = this.props;\n    onChange(value, undefined, idSchema && idSchema.$id);\n  };\n\n  /** Renders the `ArrayField` depending on the specific needs of the schema and uischema elements\n   */\n  render() {\n    const { schema, uiSchema, idSchema, registry } = this.props;\n    const { schemaUtils } = registry;\n    if (!(ITEMS_KEY in schema)) {\n      const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n      const UnsupportedFieldTemplate = getTemplate<\n        \"UnsupportedFieldTemplate\",\n        T[],\n        S,\n        F\n      >(\"UnsupportedFieldTemplate\", registry, uiOptions);\n\n      return (\n        <UnsupportedFieldTemplate\n          schema={schema}\n          idSchema={idSchema}\n          reason=\"Missing items definition\"\n          registry={registry}\n        />\n      );\n    }\n    if (schemaUtils.isMultiSelect(schema)) {\n      // If array has enum or uniqueItems set to true, call renderMultiSelect() to render the default multiselect widget or a custom widget, if specified.\n      return this.renderMultiSelect();\n    }\n    if (isCustomWidget<T[], S, F>(uiSchema)) {\n      return this.renderCustomWidget();\n    }\n    if (isFixedItems(schema)) {\n      return this.renderFixedArray();\n    }\n    if (schemaUtils.isFilesArray(schema, uiSchema)) {\n      return this.renderFiles();\n    }\n    return this.renderNormalArray();\n  }\n\n  /** Renders a normal array without any limitations of length\n   */\n  renderNormalArray() {\n    const {\n      schema,\n      uiSchema = {},\n      errorSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      idPrefix,\n      idSeparator = \"_\",\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    const title = schema.title === undefined ? name : schema.title;\n    const { schemaUtils, formContext } = registry;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const _schemaItems: S = isObject(schema.items)\n      ? (schema.items as S)\n      : ({} as S);\n    const itemsSchema: S = schemaUtils.retrieveSchema(_schemaItems);\n    const formData = keyedToPlainFormData(this.state.keyedFormData);\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd: this.canAddItem(formData),\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const itemSchema = schemaUtils.retrieveSchema(_schemaItems, itemCast);\n        const itemErrorSchema = errorSchema\n          ? (errorSchema[index] as ErrorSchema<T[]>)\n          : undefined;\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(\n          itemSchema,\n          itemIdPrefix,\n          itemCast,\n          idPrefix,\n          idSeparator\n        );\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canMoveUp: index > 0,\n          canMoveDown: index < formData.length - 1,\n          itemSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          itemData: itemCast,\n          itemUiSchema: uiSchema.items,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n        });\n      }),\n      className: `field field-array field-array-of-${itemsSchema.type}`,\n      disabled,\n      idSchema,\n      uiSchema,\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      schema,\n      title,\n      formContext,\n      formData,\n      rawErrors,\n      registry,\n    };\n\n    const Template = getTemplate<\"ArrayFieldTemplate\", T[], S, F>(\n      \"ArrayFieldTemplate\",\n      registry,\n      uiOptions\n    );\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders an array using the custom widget provided by the user in the `uiSchema`\n   */\n  renderCustomWidget() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      hideError,\n      placeholder,\n      onBlur,\n      onFocus,\n      formData: items = [],\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, formContext } = registry;\n    const title = schema.title || name;\n\n    const { widget, ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        hideError={hideError}\n        required={required}\n        label={title}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array as a set of checkboxes\n   */\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData: items = [],\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      placeholder,\n      onBlur,\n      onFocus,\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, schemaUtils, formContext } = registry;\n    const itemsSchema = schemaUtils.retrieveSchema(schema.items as S, items);\n    const title = schema.title || name;\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = \"select\", ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={{ ...options, enumOptions }}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        label={title}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array of files using the `FileWidget`\n   */\n  renderFiles() {\n    const {\n      schema,\n      uiSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      onBlur,\n      onFocus,\n      registry,\n      formData: items = [],\n      rawErrors,\n    } = this.props;\n    const title = schema.title || name;\n    const { widgets, formContext } = registry;\n    const { widget = \"files\", ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        options={options}\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        schema={schema}\n        uiSchema={uiSchema}\n        title={title}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        registry={registry}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n        label=\"\"\n      />\n    );\n  }\n\n  /** Renders an array that has a maximum limit of items\n   */\n  renderFixedArray() {\n    const {\n      schema,\n      uiSchema = {},\n      formData = [],\n      errorSchema,\n      idPrefix,\n      idSeparator = \"_\",\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    let { formData: items = [] } = this.props;\n    const title = schema.title || name;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const { schemaUtils, formContext } = registry;\n    const _schemaItems: S[] = isObject(schema.items)\n      ? (schema.items as S[])\n      : ([] as S[]);\n    const itemSchemas = _schemaItems.map((item: S, index: number) =>\n      schemaUtils.retrieveSchema(item, formData[index] as unknown as T[])\n    );\n    const additionalSchema = isObject(schema.additionalItems)\n      ? schemaUtils.retrieveSchema(schema.additionalItems as S, formData)\n      : null;\n\n    if (!items || items.length < itemSchemas.length) {\n      // to make sure at least all fixed items are generated\n      items = items || [];\n      items = items.concat(new Array(itemSchemas.length - items.length));\n    }\n\n    // These are the props passed into the render function\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd: this.canAddItem(items) && !!additionalSchema,\n      className: \"field field-array field-array-fixed-items\",\n      disabled,\n      idSchema,\n      formData,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const additional = index >= itemSchemas.length;\n        const itemSchema =\n          additional && isObject(schema.additionalItems)\n            ? schemaUtils.retrieveSchema(schema.additionalItems as S, itemCast)\n            : itemSchemas[index];\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(\n          itemSchema,\n          itemIdPrefix,\n          itemCast,\n          idPrefix,\n          idSeparator\n        );\n        const itemUiSchema = additional\n          ? uiSchema.additionalItems || {}\n          : Array.isArray(uiSchema.items)\n          ? uiSchema.items[index]\n          : uiSchema.items || {};\n        const itemErrorSchema = errorSchema\n          ? (errorSchema[index] as ErrorSchema<T[]>)\n          : undefined;\n\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canRemove: additional,\n          canMoveUp: index >= itemSchemas.length + 1,\n          canMoveDown: additional && index < items.length - 1,\n          itemSchema,\n          itemData: itemCast,\n          itemUiSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n        });\n      }),\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      registry,\n      schema,\n      uiSchema,\n      title,\n      formContext,\n      rawErrors,\n    };\n\n    const Template = getTemplate<\"ArrayFieldTemplate\", T[], S, F>(\n      \"ArrayFieldTemplate\",\n      registry,\n      uiOptions\n    );\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders the individual array item using a `SchemaField` along with the additional properties required to be send\n   * back to the `ArrayFieldItemTemplate`.\n   *\n   * @param props - The props for the individual array item to be rendered\n   */\n  renderArrayFieldItem(props: {\n    key: string;\n    index: number;\n    name: string;\n    canRemove?: boolean;\n    canMoveUp?: boolean;\n    canMoveDown?: boolean;\n    itemSchema: S;\n    itemData: T[];\n    itemUiSchema: UiSchema<T[], S, F>;\n    itemIdSchema: IdSchema<T[]>;\n    itemErrorSchema?: ErrorSchema<T[]>;\n    autofocus?: boolean;\n    onBlur: FieldProps<T[], S, F>[\"onBlur\"];\n    onFocus: FieldProps<T[], S, F>[\"onFocus\"];\n    rawErrors?: string[];\n  }) {\n    const {\n      key,\n      index,\n      name,\n      canRemove = true,\n      canMoveUp = true,\n      canMoveDown = true,\n      itemSchema,\n      itemData,\n      itemUiSchema,\n      itemIdSchema,\n      itemErrorSchema,\n      autofocus,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = props;\n    const {\n      disabled,\n      hideError,\n      idPrefix,\n      idSeparator,\n      readonly,\n      uiSchema,\n      registry,\n      formContext,\n    } = this.props;\n    const {\n      fields: { ArraySchemaField, SchemaField },\n    } = registry;\n    const ItemSchemaField = ArraySchemaField || SchemaField;\n    const { orderable = true, removable = true } = getUiOptions<T[], S, F>(\n      uiSchema\n    );\n    const has: { [key: string]: boolean } = {\n      moveUp: orderable && canMoveUp,\n      moveDown: orderable && canMoveDown,\n      remove: removable && canRemove,\n      toolbar: false,\n    };\n    has.toolbar = Object.keys(has).some((key: keyof typeof has) => has[key]);\n\n    return {\n      children: (\n        <ItemSchemaField\n          name={name}\n          index={index}\n          schema={itemSchema}\n          uiSchema={itemUiSchema}\n          formData={itemData}\n          formContext={formContext}\n          errorSchema={itemErrorSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          idSchema={itemIdSchema}\n          required={this.isItemRequired(itemSchema)}\n          onChange={this.onChangeForIndex(index)}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n          hideError={hideError}\n          autofocus={autofocus}\n          rawErrors={rawErrors}\n        />\n      ),\n      className: \"array-item\",\n      disabled,\n      hasToolbar: has.toolbar,\n      hasMoveUp: has.moveUp,\n      hasMoveDown: has.moveDown,\n      hasRemove: has.remove,\n      index,\n      key,\n      onAddIndexClick: this.onAddIndexClick,\n      onDropIndexClick: this.onDropIndexClick,\n      onReorderClick: this.onReorderClick,\n      readonly,\n      registry,\n      schema: itemSchema,\n      uiSchema: itemUiSchema,\n    };\n  }\n}\n\n/** `ArrayField` is `React.ComponentType<FieldProps<T[], S, F>>` (necessarily) but the `registry` requires things to be a\n * `Field` which is defined as `React.ComponentType<FieldProps<T, S, F>>`, so cast it to make `registry` happy.\n */\nexport default ArrayField;\n","import React from \"react\";\nimport {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  FieldProps,\n  FormContextType,\n  EnumOptionsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport isObject from \"lodash/isObject\";\n\n/** The `BooleanField` component is used to render a field in the schema is boolean. It constructs `enumOptions` for the\n * two boolean values based on the various alternatives in the schema.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction BooleanField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext } = registry;\n  const { widget = \"checkbox\", ...options } = getUiOptions<T, S, F>(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions: EnumOptionsType<S>[] | undefined;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList<S>({\n      oneOf: schema.oneOf\n        .map((option) => {\n          if (isObject(option)) {\n            return {\n              ...option,\n              title: option.title || (option.const === true ? \"Yes\" : \"No\"),\n            };\n          }\n          return undefined;\n        })\n        .filter((o: any) => o) as S[], // cast away the error that typescript can't grok is fixed\n    } as unknown as S);\n  } else {\n    // We deprecated enumNames in v5. It's intentionally omitted from RSJFSchema type, so we need to cast here.\n    const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n    const enums = schema.enum ?? [true, false];\n    if (\n      !schemaWithEnumNames.enumNames &&\n      enums.length === 2 &&\n      enums.every((v: any) => typeof v === \"boolean\")\n    ) {\n      enumOptions = [\n        {\n          value: enums[0],\n          label: enums[0] ? \"Yes\" : \"No\",\n        },\n        {\n          value: enums[1],\n          label: enums[1] ? \"Yes\" : \"No\",\n        },\n      ];\n    } else {\n      enumOptions = optionsList<S>({\n        enum: enums,\n        // NOTE: enumNames is deprecated, but still supported for now.\n        enumNames: schemaWithEnumNames.enumNames,\n      } as unknown as S);\n    }\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default BooleanField;\n","import React, { Component } from \"react\";\nimport {\n  getUiOptions,\n  getWidget,\n  guessType,\n  deepEquals,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport unset from \"lodash/unset\";\n\n/** Type used for the state of the `AnyOfField` component */\ntype AnyOfFieldState = {\n  /** The currently selected option */\n  selectedOption: number;\n};\n\n/** The `AnyOfField` component is used to render a field in the schema that is an `anyOf`, `allOf` or `oneOf`. It tracks\n * the currently selected option and cleans up any irrelevant data in `formData`.\n *\n * @param props - The `FieldProps` for this template\n */\nclass AnyOfField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FieldProps<T, S, F>, AnyOfFieldState> {\n  /** Constructs an `AnyOfField` with the given `props` to initialize the initially selected option in state\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T, S, F>) {\n    super(props);\n\n    const { formData, options } = this.props;\n\n    this.state = {\n      selectedOption: this.getMatchingOption(0, formData, options),\n    };\n  }\n\n  /** React lifecycle methos that is called when the props and/or state for this component is updated. It recomputes the\n   * currently selected option based on the overall `formData`\n   *\n   * @param prevProps - The previous `FieldProps` for this template\n   * @param prevState - The previous `AnyOfFieldState` for this template\n   */\n  componentDidUpdate(\n    prevProps: Readonly<FieldProps<T, S, F>>,\n    prevState: Readonly<AnyOfFieldState>\n  ) {\n    const { formData, options, idSchema } = this.props;\n    const { selectedOption } = this.state;\n    if (\n      !deepEquals(formData, prevProps.formData) &&\n      idSchema.$id === prevProps.idSchema.$id\n    ) {\n      const matchingOption = this.getMatchingOption(\n        selectedOption,\n        formData,\n        options\n      );\n\n      if (!prevState || matchingOption === selectedOption) {\n        return;\n      }\n\n      this.setState({\n        selectedOption: matchingOption,\n      });\n    }\n  }\n\n  /** Determines the best matching option for the given `formData` and `options`.\n   *\n   * @param formData - The new formData\n   * @param options - The list of options to choose from\n   * @return - The index of the `option` that best matches the `formData`\n   */\n  getMatchingOption(selectedOption: number, formData: T, options: S[]) {\n    const { schemaUtils } = this.props.registry;\n\n    const option = schemaUtils.getMatchingOption(formData, options);\n    if (option !== 0) {\n      return option;\n    }\n    // If the form data matches none of the options, use the currently selected\n    // option, assuming it's available; otherwise use the first option\n    return selectedOption || 0;\n  }\n\n  /** Callback handler to remember what the currently selected option is. In addition to that the `formData` is updated\n   * to remove properties that are not part of the newly selected option schema, and then the updated data is passed to\n   * the `onChange` handler.\n   *\n   * @param option -\n   */\n  onOptionChange = (option: any) => {\n    const selectedOption = parseInt(option, 10);\n    const { formData, onChange, options, registry } = this.props;\n    const { schemaUtils } = registry;\n    const newOption = schemaUtils.retrieveSchema(\n      options[selectedOption],\n      formData\n    );\n\n    // If the new option is of type object and the current data is an object,\n    // discard properties added using the old option.\n    let newFormData: T | undefined = undefined;\n    if (\n      guessType(formData) === \"object\" &&\n      (newOption.type === \"object\" || newOption.properties)\n    ) {\n      newFormData = Object.assign({}, formData);\n\n      const optionsToDiscard = options.slice();\n      optionsToDiscard.splice(selectedOption, 1);\n\n      // Discard any data added using other options\n      for (const option of optionsToDiscard) {\n        if (option.properties) {\n          for (const key in option.properties) {\n            if (key in newFormData) {\n              unset(newFormData, key);\n            }\n          }\n        }\n      }\n    }\n    // Call getDefaultFormState to make sure defaults are populated on change. Pass \"excludeObjectChildren\"\n    // so that only the root objects themselves are created without adding undefined children properties\n    onChange(\n      schemaUtils.getDefaultFormState(\n        options[selectedOption],\n        newFormData,\n        \"excludeObjectChildren\"\n      ) as T,\n      undefined,\n      this.getFieldId()\n    );\n\n    this.setState({\n      selectedOption: parseInt(option, 10),\n    });\n  };\n\n  getFieldId() {\n    const { idSchema, schema } = this.props;\n    return `${idSchema.$id}${\n      schema.oneOf ? \"__oneof_select\" : \"__anyof_select\"\n    }`;\n  }\n\n  /** Renders the `AnyOfField` selector along with a `SchemaField` for the value of the `formData`\n   */\n  render() {\n    const {\n      name,\n      baseType,\n      disabled = false,\n      readonly = false,\n      hideError = false,\n      errorSchema = {},\n      formData,\n      formContext,\n      idPrefix,\n      idSeparator,\n      idSchema,\n      onBlur,\n      onChange,\n      onFocus,\n      options,\n      registry,\n      uiSchema,\n    } = this.props;\n\n    const { widgets, fields } = registry;\n    const { SchemaField: _SchemaField } = fields;\n    const { selectedOption } = this.state;\n    const { widget = \"select\", ...uiOptions } = getUiOptions<T, S, F>(uiSchema);\n    const Widget = getWidget<T, S, F>({ type: \"number\" }, widget, widgets);\n\n    const option = options[selectedOption] || null;\n    let optionSchema;\n\n    if (option) {\n      // If the subschema doesn't declare a type, infer the type from the\n      // parent schema\n      optionSchema = option.type\n        ? option\n        : Object.assign({}, option, { type: baseType });\n    }\n\n    const enumOptions = options.map((option: RJSFSchema, index: number) => ({\n      label: option.title || `Option ${index + 1}`,\n      value: index,\n    }));\n\n    return (\n      <div className=\"panel panel-default panel-body\">\n        <div className=\"form-group\">\n          <Widget\n            id={this.getFieldId()}\n            schema={{ type: \"number\", default: 0 } as S}\n            onChange={this.onOptionChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            value={selectedOption}\n            options={{ enumOptions }}\n            registry={registry}\n            formContext={formContext}\n            {...uiOptions}\n            label=\"\"\n          />\n        </div>\n        {option !== null && (\n          <_SchemaField\n            name={name}\n            schema={optionSchema}\n            uiSchema={uiSchema}\n            errorSchema={errorSchema}\n            idSchema={idSchema}\n            idPrefix={idPrefix}\n            idSeparator={idSeparator}\n            formData={formData}\n            formContext={formContext}\n            onChange={onChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            registry={registry}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AnyOfField;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  asNumber,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n// Matches a string that ends in a . character, optionally followed by a sequence of\n// digits followed by any number of 0 characters up until the end of the line.\n// Ensuring that there is at least one prefixed character is important so that\n// you don't incorrectly match against \"0\".\nconst trailingCharMatcherWithPrefix = /\\.([0-9]*0)*$/;\n\n// This is used for trimming the trailing 0 and . characters without affecting\n// the rest of the string. Its possible to use one RegEx with groups for this\n// functionality, but it is fairly complex compared to simply defining two\n// different matchers.\nconst trailingCharMatcher = /[0.]0*$/;\n\n/**\n * The NumberField class has some special handling for dealing with trailing\n * decimal points and/or zeroes. This logic is designed to allow trailing values\n * to be visible in the input element, but not be represented in the\n * corresponding form data.\n *\n * The algorithm is as follows:\n *\n * 1. When the input value changes the value is cached in the component state\n *\n * 2. The value is then normalized, removing trailing decimal points and zeros,\n *    then passed to the \"onChange\" callback\n *\n * 3. When the component is rendered, the formData value is checked against the\n *    value cached in the state. If it matches the cached value, the cached\n *    value is passed to the input instead of the formData value\n */\nfunction NumberField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const { registry, onChange, formData, value: initialValue } = props;\n  const [lastValue, setLastValue] = useState(initialValue);\n  const { StringField } = registry.fields;\n\n  let value = formData;\n\n  /** Handle the change from the `StringField` to properly convert to a number\n   *\n   * @param value - The current value for the change occurring\n   */\n  const handleChange = useCallback(\n    (value: FieldProps<T, S, F>[\"value\"]) => {\n      // Cache the original value in component state\n      setLastValue(value);\n\n      // Normalize decimals that don't start with a zero character in advance so\n      // that the rest of the normalization logic is simpler\n      if (`${value}`.charAt(0) === \".\") {\n        value = `0${value}`;\n      }\n\n      // Check that the value is a string (this can happen if the widget used is a\n      // <select>, due to an enum declaration etc) then, if the value ends in a\n      // trailing decimal point or multiple zeroes, strip the trailing values\n      const processed =\n        typeof value === \"string\" && value.match(trailingCharMatcherWithPrefix)\n          ? asNumber(value.replace(trailingCharMatcher, \"\"))\n          : asNumber(value);\n\n      onChange(processed as unknown as T);\n    },\n    [onChange]\n  );\n\n  if (typeof lastValue === \"string\" && typeof value === \"number\") {\n    // Construct a regular expression that checks for a string that consists\n    // of the formData value suffixed with zero or one '.' characters and zero\n    // or more '0' characters\n    const re = new RegExp(`${value}`.replace(\".\", \"\\\\.\") + \"\\\\.?0*$\");\n\n    // If the cached \"lastValue\" is a match, use that instead of the formData\n    // value to prevent the input value from changing in the UI\n    if (lastValue.match(re)) {\n      value = lastValue as unknown as T;\n    }\n  }\n\n  return <StringField {...props} formData={value} onChange={handleChange} />;\n}\n\nexport default NumberField;\n","import React, { Component } from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  orderProperties,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  GenericObjectType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  ADDITIONAL_PROPERTY_FLAG,\n  PROPERTIES_KEY,\n  REF_KEY,\n} from \"@rjsf/utils\";\nimport get from \"lodash/get\";\nimport has from \"lodash/has\";\nimport isObject from \"lodash/isObject\";\nimport set from \"lodash/set\";\nimport unset from \"lodash/unset\";\n\n/** Type used for the state of the `ObjectField` component */\ntype ObjectFieldState = {\n  /** Flag indicating whether an additional property key was modified */\n  wasPropertyKeyModified: boolean;\n  /** The set of additional properties */\n  additionalProperties: object;\n};\n\n/** The `ObjectField` component is used to render a field in the schema that is of type `object`. It tracks whether an\n * additional property key was modified and what it was modified to\n *\n * @param props - The `FieldProps` for this template\n */\nclass ObjectField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FieldProps<T, S, F>, ObjectFieldState> {\n  /** Set up the initial state */\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  /** Returns a flag indicating whether the `name` field is required in the object schema\n   *\n   * @param name - The name of the field to check for required-ness\n   * @returns - True if the field `name` is required, false otherwise\n   */\n  isRequired(name: string) {\n    const { schema } = this.props;\n    return (\n      Array.isArray(schema.required) && schema.required.indexOf(name) !== -1\n    );\n  }\n\n  /** Returns the `onPropertyChange` handler for the `name` field. Handles the special case where a user is attempting\n   * to clear the data for a field added as an additional property. Calls the `onChange()` handler with the updated\n   * formData.\n   *\n   * @param name - The name of the property\n   * @param addedByAdditionalProperties - Flag indicating whether this property is an additional property\n   * @returns - The onPropertyChange callback for the `name` property\n   */\n  onPropertyChange = (name: string, addedByAdditionalProperties = false) => {\n    return (value: T, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = \"\" as unknown as T;\n      }\n      const newFormData = { ...formData, [name]: value };\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [name]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Returns a callback to handle the onDropPropertyClick event for the given `key` which removes the old `key` data\n   * and calls the `onChange` callback with it\n   *\n   * @param key - The key for which the drop callback is desired\n   * @returns - The drop property click callback\n   */\n  onDropPropertyClick = (key: string) => {\n    return (event: DragEvent) => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData };\n      unset(copiedFormData, key);\n      onChange(copiedFormData);\n    };\n  };\n\n  /** Computes the next available key name from the `preferredKey`, indexing through the already existing keys until one\n   * that is already not assigned is found.\n   *\n   * @param preferredKey - The preferred name of a new key\n   * @param formData - The form data in which to check if the desired key already exists\n   * @returns - The name of the next available key from `preferredKey`\n   */\n  getAvailableKey = (preferredKey: string, formData: T) => {\n    const { uiSchema } = this.props;\n    const { duplicateKeySuffixSeparator = \"-\" } = getUiOptions<T, S, F>(\n      uiSchema\n    );\n\n    let index = 0;\n    let newKey = preferredKey;\n    while (newKey in formData) {\n      newKey = `${preferredKey}${duplicateKeySuffixSeparator}${++index}`;\n    }\n    return newKey;\n  };\n\n  /** Returns a callback function that deals with the rename of a key for an additional property for a schema. That\n   * callback will attempt to rename the key and move the existing data to that key, calling `onChange` when it does.\n   *\n   * @param oldValue - The old value of a field\n   * @returns - The key change callback function\n   */\n  onKeyChange = (oldValue: any) => {\n    return (value: any, newErrorSchema: ErrorSchema<T>) => {\n      if (oldValue === value) {\n        return;\n      }\n      const { formData, onChange, errorSchema } = this.props;\n\n      value = this.getAvailableKey(value, formData);\n      const newFormData: GenericObjectType = {\n        ...(formData as GenericObjectType),\n      };\n      const newKeys: GenericObjectType = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map((key) => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      onChange(\n        renamedObj,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [value]: newErrorSchema,\n          }\n      );\n    };\n  };\n\n  /** Returns a default value to be used for a new additional schema property of the given `type`\n   *\n   * @param type - The type of the new additional schema property\n   */\n  getDefaultValue(type?: RJSFSchema[\"type\"]) {\n    switch (type) {\n      case \"string\":\n        return \"New Value\";\n      case \"array\":\n        return [];\n      case \"boolean\":\n        return false;\n      case \"null\":\n        return null;\n      case \"number\":\n        return 0;\n      case \"object\":\n        return {};\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return \"New Value\";\n    }\n  }\n\n  /** Handles the adding of a new additional property on the given `schema`. Calls the `onChange` callback once the new\n   * default data for that field has been added to the formData.\n   *\n   * @param schema - The schema element to which the new property is being added\n   */\n  handleAddClick = (schema: S) => () => {\n    if (!schema.additionalProperties) {\n      return;\n    }\n    const { formData, onChange, registry } = this.props;\n    const newFormData = { ...formData };\n\n    let type: RJSFSchema[\"type\"] = undefined;\n    if (isObject(schema.additionalProperties)) {\n      type = schema.additionalProperties.type;\n      if (REF_KEY in schema.additionalProperties) {\n        const { schemaUtils } = registry;\n        const refSchema = schemaUtils.retrieveSchema(\n          { $ref: schema.additionalProperties[REF_KEY] } as S,\n          formData\n        );\n        type = refSchema.type;\n      }\n    }\n\n    const newKey = this.getAvailableKey(\"newKey\", newFormData);\n    // Cast this to make the `set` work properly\n    set(newFormData as GenericObjectType, newKey, this.getDefaultValue(type));\n\n    onChange(newFormData);\n  };\n\n  /** Renders the `ObjectField` from the given props\n   */\n  render() {\n    const {\n      schema: rawSchema,\n      uiSchema = {},\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required = false,\n      disabled = false,\n      readonly = false,\n      hideError,\n      idPrefix,\n      idSeparator,\n      onBlur,\n      onFocus,\n      registry,\n    } = this.props;\n\n    const { fields, formContext, schemaUtils } = registry;\n    const { SchemaField } = fields;\n    const schema: S = schemaUtils.retrieveSchema(rawSchema, formData);\n    const uiOptions = getUiOptions<T, S, F>(uiSchema);\n    const { properties: schemaProperties = {} } = schema;\n\n    const title = schema.title === undefined ? name : schema.title;\n    const description = uiOptions.description || schema.description;\n    let orderedProperties: string[];\n    try {\n      const properties = Object.keys(schemaProperties);\n      orderedProperties = orderProperties(properties, uiOptions.order);\n    } catch (err) {\n      return (\n        <div>\n          <p className=\"config-error\" style={{ color: \"red\" }}>\n            Invalid {name || \"root\"} object field configuration:\n            <em>{(err as Error).message}</em>.\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template = getTemplate<\"ObjectFieldTemplate\", T, S, F>(\n      \"ObjectFieldTemplate\",\n      registry,\n      uiOptions\n    );\n\n    const templateProps = {\n      title: uiOptions.title || title,\n      description,\n      properties: orderedProperties.map((name) => {\n        const addedByAdditionalProperties = has(schema, [\n          PROPERTIES_KEY,\n          name,\n          ADDITIONAL_PROPERTY_FLAG,\n        ]);\n        const fieldUiSchema = addedByAdditionalProperties\n          ? uiSchema.additionalProperties\n          : uiSchema[name];\n        const hidden = getUiOptions<T, S, F>(fieldUiSchema).widget === \"hidden\";\n        const fieldIdSchema: IdSchema<T> = get(idSchema, [name], {});\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={get(schema, [PROPERTIES_KEY, name], {})}\n              uiSchema={fieldUiSchema}\n              errorSchema={get(errorSchema, name)}\n              idSchema={fieldIdSchema}\n              idPrefix={idPrefix}\n              idSeparator={idSeparator}\n              formData={get(formData, name)}\n              formContext={formContext}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(\n                name,\n                addedByAdditionalProperties\n              )}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nexport default ObjectField;\n","import React from \"react\";\nimport {\n  mergeObjects,\n  deepEquals,\n  getUiOptions,\n  getSchemaType,\n  getTemplate,\n  ErrorSchema,\n  FieldProps,\n  FieldTemplateProps,\n  FormContextType,\n  IdSchema,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  UIOptionsType,\n  ID_KEY,\n  ADDITIONAL_PROPERTY_FLAG,\n} from \"@rjsf/utils\";\nimport isObject from \"lodash/isObject\";\nimport omit from \"lodash/omit\";\n\n/** The map of component type to FieldName */\nconst COMPONENT_TYPES: { [key: string]: string } = {\n  array: \"ArrayField\",\n  boolean: \"BooleanField\",\n  integer: \"NumberField\",\n  number: \"NumberField\",\n  object: \"ObjectField\",\n  string: \"StringField\",\n  null: \"NullField\",\n};\n\n/** Computes and returns which `Field` implementation to return in order to render the field represented by the\n * `schema`. The `uiOptions` are used to alter what potential `Field` implementation is actually returned. If no\n * appropriate `Field` implementation can be found then a wrapper around `UnsupportedFieldTemplate` is used.\n *\n * @param schema - The schema from which to obtain the type\n * @param uiOptions - The UI Options that may affect the component decision\n * @param idSchema - The id that is passed to the `UnsupportedFieldTemplate`\n * @param registry - The registry from which fields and templates are obtained\n * @returns - The `Field` component that is used to render the actual field data\n */\nfunction getFieldComponent<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  schema: S,\n  uiOptions: UIOptionsType<T, S, F>,\n  idSchema: IdSchema<T>,\n  registry: Registry<T, S, F>\n) {\n  const field = uiOptions.field;\n  const { fields } = registry;\n  if (typeof field === \"function\") {\n    return field;\n  }\n  if (typeof field === \"string\" && field in fields) {\n    return fields[field];\n  }\n\n  const schemaType = getSchemaType(schema);\n  const type: string = Array.isArray(schemaType)\n    ? schemaType[0]\n    : schemaType || \"\";\n  const componentName = COMPONENT_TYPES[type];\n\n  // If the type is not defined and the schema uses 'anyOf' or 'oneOf', don't\n  // render a field and let the MultiSchemaField component handle the form display\n  if (!componentName && (schema.anyOf || schema.oneOf)) {\n    return () => null;\n  }\n\n  return componentName in fields\n    ? fields[componentName]\n    : () => {\n        const UnsupportedFieldTemplate = getTemplate<\n          \"UnsupportedFieldTemplate\",\n          T,\n          S,\n          F\n        >(\"UnsupportedFieldTemplate\", registry, uiOptions);\n\n        return (\n          <UnsupportedFieldTemplate\n            schema={schema}\n            idSchema={idSchema}\n            reason={`Unknown field type ${schema.type}`}\n            registry={registry}\n          />\n        );\n      };\n}\n\n/** The `SchemaFieldRender` component is the work-horse of react-jsonschema-form, determining what kind of real field to\n * render based on the `schema`, `uiSchema` and all the other props. It also deals with rendering the `anyOf` and\n * `oneOf` fields.\n *\n * @param props - The `FieldProps` for this component\n */\nfunction SchemaFieldRender<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const {\n    schema: _schema,\n    idSchema: _idSchema,\n    uiSchema,\n    formData,\n    errorSchema,\n    idPrefix,\n    idSeparator,\n    name,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    registry,\n    wasPropertyKeyModified = false,\n  } = props;\n  const { formContext, schemaUtils } = registry;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const FieldTemplate = getTemplate<\"FieldTemplate\", T, S, F>(\n    \"FieldTemplate\",\n    registry,\n    uiOptions\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, uiOptions);\n  const FieldHelpTemplate = getTemplate<\"FieldHelpTemplate\", T, S, F>(\n    \"FieldHelpTemplate\",\n    registry,\n    uiOptions\n  );\n  const FieldErrorTemplate = getTemplate<\"FieldErrorTemplate\", T, S, F>(\n    \"FieldErrorTemplate\",\n    registry,\n    uiOptions\n  );\n  const schema = schemaUtils.retrieveSchema(_schema, formData);\n  const fieldId = _idSchema[ID_KEY];\n  const idSchema = mergeObjects(\n    schemaUtils.toIdSchema(schema, fieldId, formData, idPrefix, idSeparator),\n    _idSchema\n  ) as IdSchema<T>;\n\n  /** Intermediary `onChange` handler for field components that will inject the `id` of the current field into the\n   * `onChange` chain if it is not already being provided from a deeper level in the hierarchy\n   */\n  const handleFieldComponentChange = React.useCallback(\n    (formData: T, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const theId = id || fieldId;\n      return onChange(formData, newErrorSchema, theId);\n    },\n    [fieldId, onChange]\n  );\n\n  const FieldComponent = getFieldComponent<T, S, F>(\n    schema,\n    uiOptions,\n    idSchema,\n    registry\n  );\n  const disabled = Boolean(props.disabled || uiOptions.disabled);\n  const readonly = Boolean(\n    props.readonly ||\n      uiOptions.readonly ||\n      props.schema.readOnly ||\n      schema.readOnly\n  );\n  const uiSchemaHideError = uiOptions.hideError;\n  // Set hideError to the value provided in the uiSchema, otherwise stick with the prop to propagate to children\n  const hideError =\n    uiSchemaHideError === undefined\n      ? props.hideError\n      : Boolean(uiSchemaHideError);\n  const autofocus = Boolean(props.autofocus || uiOptions.autofocus);\n  if (Object.keys(schema).length === 0) {\n    return null;\n  }\n\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema);\n\n  const { __errors, ...fieldErrorSchema } = errorSchema || {};\n  // See #439: uiSchema: Don't pass consumed class names to child components\n  const fieldUiSchema = omit(uiSchema, [\"ui:classNames\", \"classNames\"]);\n  if (\"ui:options\" in fieldUiSchema) {\n    fieldUiSchema[\"ui:options\"] = omit(fieldUiSchema[\"ui:options\"], [\n      \"classNames\",\n    ]);\n  }\n\n  const field = (\n    <FieldComponent\n      {...props}\n      onChange={handleFieldComponentChange}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={fieldUiSchema}\n      disabled={disabled}\n      readonly={readonly}\n      hideError={hideError}\n      autofocus={autofocus}\n      errorSchema={fieldErrorSchema}\n      formContext={formContext}\n      rawErrors={__errors}\n    />\n  );\n\n  const id = idSchema[ID_KEY];\n\n  // If this schema has a title defined, but the user has set a new key/label, retain their input.\n  let label;\n  if (wasPropertyKeyModified) {\n    label = name;\n  } else {\n    label =\n      ADDITIONAL_PROPERTY_FLAG in schema\n        ? name\n        : uiOptions.title || props.schema.title || schema.title || name;\n  }\n\n  const description =\n    uiOptions.description ||\n    props.schema.description ||\n    schema.description ||\n    \"\";\n  const help = uiOptions.help;\n  const hidden = uiOptions.widget === \"hidden\";\n\n  const classNames = [\"form-group\", \"field\", `field-${schema.type}`];\n  if (!hideError && __errors && __errors.length > 0) {\n    classNames.push(\"field-error has-error has-danger\");\n  }\n  if (uiSchema?.classNames) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\n        \"'uiSchema.classNames' is deprecated and may be removed in a major release; Use 'ui:classNames' instead.\"\n      );\n    }\n    classNames.push(uiSchema.classNames);\n  }\n  if (uiOptions.classNames) {\n    classNames.push(uiOptions.classNames);\n  }\n\n  const helpComponent = (\n    <FieldHelpTemplate\n      help={help}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      hasErrors={!hideError && __errors && __errors.length > 0}\n      registry={registry}\n    />\n  );\n  const errorsComponent = hideError ? undefined : (\n    <FieldErrorTemplate\n      errors={__errors}\n      errorSchema={errorSchema}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n  const fieldProps: Omit<FieldTemplateProps<T, S, F>, \"children\"> = {\n    description: (\n      <DescriptionFieldTemplate\n        id={`${id}__description`}\n        description={description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    ),\n    rawDescription: description,\n    help: helpComponent,\n    rawHelp: typeof help === \"string\" ? help : undefined,\n    errors: errorsComponent,\n    rawErrors: hideError ? undefined : __errors,\n    id,\n    label,\n    hidden,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    disabled,\n    readonly,\n    hideError,\n    displayLabel,\n    classNames: classNames.join(\" \").trim(),\n    formContext,\n    formData,\n    schema,\n    uiSchema,\n    registry,\n  };\n\n  const _AnyOfField = registry.fields.AnyOfField;\n  const _OneOfField = registry.fields.OneOfField;\n\n  return (\n    <FieldTemplate {...fieldProps}>\n      <>\n        {field}\n        {/*\n        If the schema `anyOf` or 'oneOf' can be rendered as a select control, don't\n        render the selection and let `StringField` component handle\n        rendering\n      */}\n        {schema.anyOf &&\n          !uiSchema?.[\"ui:field\"] &&\n          !schemaUtils.isSelect(schema) && (\n            <_AnyOfField\n              name={name}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              errorSchema={errorSchema}\n              formData={formData}\n              formContext={formContext}\n              idPrefix={idPrefix}\n              idSchema={idSchema}\n              idSeparator={idSeparator}\n              onBlur={props.onBlur}\n              onChange={props.onChange}\n              onFocus={props.onFocus}\n              options={schema.anyOf.map((_schema) =>\n                schemaUtils.retrieveSchema(\n                  isObject(_schema) ? (_schema as S) : ({} as S),\n                  formData\n                )\n              )}\n              baseType={schema.type}\n              registry={registry}\n              schema={schema}\n              uiSchema={uiSchema}\n            />\n          )}\n        {schema.oneOf &&\n          !uiSchema?.[\"ui:field\"] &&\n          !schemaUtils.isSelect(schema) && (\n            <_OneOfField\n              name={name}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              errorSchema={errorSchema}\n              formData={formData}\n              formContext={formContext}\n              idPrefix={idPrefix}\n              idSchema={idSchema}\n              idSeparator={idSeparator}\n              onBlur={props.onBlur}\n              onChange={props.onChange}\n              onFocus={props.onFocus}\n              options={schema.oneOf.map((_schema) =>\n                schemaUtils.retrieveSchema(\n                  isObject(_schema) ? (_schema as S) : ({} as S),\n                  formData\n                )\n              )}\n              baseType={schema.type}\n              registry={registry}\n              schema={schema}\n              uiSchema={uiSchema}\n            />\n          )}\n      </>\n    </FieldTemplate>\n  );\n}\n\n/** The `SchemaField` component determines whether it is necessary to rerender the component based on any props changes\n * and if so, calls the `SchemaFieldRender` component with the props.\n */\nclass SchemaField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends React.Component<FieldProps<T, S, F>> {\n  shouldComponentUpdate(nextProps: Readonly<FieldProps<T, S, F>>) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  render() {\n    return <SchemaFieldRender<T, S, F> {...this.props} />;\n  }\n}\n\nexport default SchemaField;\n","import React from \"react\";\nimport {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  hasWidget,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `StringField` component is used to render a schema field that represents a string type\n *\n * @param props - The `FieldProps` for this template\n */\nfunction StringField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled = false,\n    readonly = false,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus,\n    registry,\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext, schemaUtils } = registry;\n  const enumOptions = schemaUtils.isSelect(schema)\n    ? optionsList(schema)\n    : undefined;\n  let defaultWidget = enumOptions ? \"select\" : \"text\";\n  if (format && hasWidget<T, S, F>(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const {\n    widget = defaultWidget,\n    placeholder = \"\",\n    ...options\n  } = getUiOptions<T, S, F>(uiSchema);\n  const Widget = getWidget<T, S, F>(schema, widget, widgets);\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema && idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default StringField;\n","import { useEffect } from \"react\";\nimport {\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `NullField` component is used to render a field in the schema is null. It also ensures that the `formData` is\n * also set to null if it has no value.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction NullField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const { formData, onChange } = props;\n  useEffect(() => {\n    if (formData === undefined) {\n      onChange(null as unknown as T);\n    }\n  }, [formData, onChange]);\n\n  return null;\n}\n\nexport default NullField;\n","import {\n  Field,\n  FormContextType,\n  RegistryFieldsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport ArrayField from \"./ArrayField\";\nimport BooleanField from \"./BooleanField\";\nimport MultiSchemaField from \"./MultiSchemaField\";\nimport NumberField from \"./NumberField\";\nimport ObjectField from \"./ObjectField\";\nimport SchemaField from \"./SchemaField\";\nimport StringField from \"./StringField\";\nimport NullField from \"./NullField\";\n\nfunction fields<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryFieldsType<T, S, F> {\n  return {\n    AnyOfField: MultiSchemaField,\n    ArrayField: ArrayField as unknown as Field<T, S, F>,\n    // ArrayField falls back to SchemaField if ArraySchemaField is not defined, which it isn't by default\n    BooleanField,\n    NumberField,\n    ObjectField,\n    OneOfField: MultiSchemaField,\n    SchemaField,\n    StringField,\n    NullField,\n  };\n}\n\nexport default fields;\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const { label: displayLabel = true } = options;\n  if (!description || !displayLabel) {\n    return null;\n  }\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, options);\n  const id = `${idSchema.$id}__description`;\n  return (\n    <DescriptionFieldTemplate\n      id={id}\n      description={description}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import React, { CSSProperties } from \"react\";\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n    uiSchema,\n  } = props;\n  const { MoveDownButton, MoveUpButton, RemoveButton } =\n    registry.templates.ButtonTemplates;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\",\n  };\n  return (\n    <div className={className}>\n      <div className={hasToolbar ? \"col-xs-9\" : \"col-xs-12\"}>{children}</div>\n      {hasToolbar && (\n        <div className=\"col-xs-3 array-item-toolbox\">\n          <div\n            className=\"btn-group\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveUpButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveUp}\n                onClick={onReorderClick(index, index - 1)}\n                uiSchema={uiSchema}\n              />\n            )}\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveDownButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveDown}\n                onClick={onReorderClick(index, index + 1)}\n                uiSchema={uiSchema}\n              />\n            )}\n            {hasRemove && (\n              <RemoveButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onDropIndexClick(index)}\n                uiSchema={uiSchema}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    \"ArrayFieldDescriptionTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldDescriptionTemplate\", registry, uiOptions);\n  const ArrayFieldItemTemplate = getTemplate<\"ArrayFieldItemTemplate\", T, S, F>(\n    \"ArrayFieldItemTemplate\",\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<\n    \"ArrayFieldTitleTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldTitleTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className=\"row array-item-list\">\n        {items &&\n          items.map(\n            ({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n              <ArrayFieldItemTemplate key={key} {...itemProps} />\n            )\n          )}\n      </div>\n      {canAdd && (\n        <AddButton\n          className=\"array-item-add\"\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldTitleTemplate` component renders a `TitleFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldTitleProps` for the component\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { idSchema, title, schema, uiSchema, required, registry } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const { label: displayLabel = true } = options;\n  if (!title || !displayLabel) {\n    return null;\n  }\n  const TitleFieldTemplate: TemplatesType<T, S, F>[\"TitleFieldTemplate\"] =\n    getTemplate<\"TitleFieldTemplate\", T, S, F>(\n      \"TitleFieldTemplate\",\n      registry,\n      options\n    );\n  const id = `${idSchema.$id}__title`;\n  return (\n    <TitleFieldTemplate\n      id={id}\n      title={title}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport {\n  getInputProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    id,\n    value,\n    readonly,\n    disabled,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    options,\n    schema,\n    uiSchema,\n    formContext,\n    registry,\n    rawErrors,\n    type,\n    ...rest\n  } = props;\n\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!id) {\n    console.log(\"No id for\", props);\n    throw new Error(`no id for props ${JSON.stringify(props)}`);\n  }\n  const inputProps = {\n    ...rest,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n\n  let inputValue;\n  if (inputProps.type === \"number\" || inputProps.type === \"integer\") {\n    inputValue = value || value === 0 ? value : \"\";\n  } else {\n    inputValue = value == null ? \"\" : value;\n  }\n\n  const _onChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) =>\n      onChange(value === \"\" ? options.emptyValue : value),\n    [onChange, options]\n  );\n  const _onBlur = useCallback(\n    ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n      onBlur(id, value),\n    [onBlur, id]\n  );\n  const _onFocus = useCallback(\n    ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n      onFocus(id, value),\n    [onFocus, id]\n  );\n\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        className=\"form-control\"\n        readOnly={readonly}\n        disabled={disabled}\n        autoFocus={autofocus}\n        value={inputValue}\n        {...inputProps}\n        list={schema.examples ? `examples_${id}` : undefined}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist key={`datalist_${id}`} id={`examples_${id}`}>\n          {[\n            ...new Set(\n              schema.examples.concat(schema.default ? [schema.default] : [])\n            ),\n          ].map((example: any) => (\n            <option key={example} value={example} />\n          ))}\n        </datalist>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  getSubmitButtonOptions,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  SubmitButtonProps,\n} from \"@rjsf/utils\";\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const {\n    submitText,\n    norender,\n    props: submitButtonProps = {},\n  } = getSubmitButtonOptions(uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button\n        type=\"submit\"\n        {...submitButtonProps}\n        className={`btn btn-info ${submitButtonProps.className}`}\n      >\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function IconButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  const {\n    iconType = \"default\",\n    icon,\n    className,\n    uiSchema,\n    ...otherProps\n  } = props;\n  return (\n    <button\n      type=\"button\"\n      className={`btn btn-${iconType} ${className}`}\n      {...otherProps}\n    >\n      <i className={`glyphicon glyphicon-${icon}`} />\n    </button>\n  );\n}\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Move down\"\n      className=\"array-item-move-down\"\n      {...props}\n      icon=\"arrow-down\"\n    />\n  );\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Move up\"\n      className=\"array-item-move-up\"\n      {...props}\n      icon=\"arrow-up\"\n    />\n  );\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Remove\"\n      className=\"array-item-remove\"\n      {...props}\n      iconType=\"danger\"\n      icon=\"remove\"\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport IconButton from \"./IconButton\";\n\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ className, onClick, disabled }: IconButtonProps<T, S, F>) {\n  return (\n    <div className=\"row\">\n      <p className={`col-xs-3 col-xs-offset-9 text-right ${className}`}>\n        <IconButton\n          iconType=\"info\"\n          icon=\"plus\"\n          className=\"btn-add col-xs-12\"\n          title=\"Add\"\n          onClick={onClick}\n          disabled={disabled}\n        />\n      </p>\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nimport SubmitButton from \"./SubmitButton\";\nimport AddButton from \"./AddButton\";\nimport { RemoveButton, MoveDownButton, MoveUpButton } from \"./IconButton\";\n\nfunction buttonTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F>[\"ButtonTemplates\"] {\n  return {\n    SubmitButton,\n    AddButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n  };\n}\n\nexport default buttonTemplates;\n","import React from \"react\";\nimport {\n  DescriptionFieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `DescriptionField` is the template to use to render the description of a field\n *\n * @param props - The `DescriptionFieldProps` for this component\n */\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: DescriptionFieldProps<T, S, F>) {\n  const { id, description } = props;\n  if (!description) {\n    return null;\n  }\n  if (typeof description === \"string\") {\n    return (\n      <p id={id} className=\"field-description\">\n        {description}\n      </p>\n    );\n  } else {\n    return (\n      <div id={id} className=\"field-description\">\n        {description}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ errors }: ErrorListProps<T, S, F>) {\n  return (\n    <div className=\"panel panel-danger errors\">\n      <div className=\"panel-heading\">\n        <h3 className=\"panel-title\">Errors</h3>\n      </div>\n      <ul className=\"list-group\">\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className=\"list-group-item text-danger\">\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst REQUIRED_FIELD_SYMBOL = \"*\";\n\nexport type LabelProps = {\n  /** The label for the field */\n  label?: string;\n  /** A boolean value stating if the field is required */\n  required?: boolean;\n  /** The id of the input field being labeled */\n  id?: string;\n};\n\n/** Renders a label for a field\n *\n * @param props - The `LabelProps` for this component\n */\nexport default function Label(props: LabelProps) {\n  const { label, required, id } = props;\n  if (!label) {\n    return null;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n","import React from \"react\";\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  getTemplate,\n  getUiOptions,\n} from \"@rjsf/utils\";\n\nimport Label from \"./Label\";\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const {\n    id,\n    label,\n    children,\n    errors,\n    help,\n    description,\n    hidden,\n    required,\n    displayLabel,\n    registry,\n    uiSchema,\n  } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<\n    \"WrapIfAdditionalTemplate\",\n    T,\n    S,\n    F\n  >(\"WrapIfAdditionalTemplate\", registry, uiOptions);\n  if (hidden) {\n    return <div className=\"hidden\">{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import React from \"react\";\nimport {\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = `${idSchema.$id}__error`;\n\n  return (\n    <div>\n      <ul id={id} className=\"error-detail bs-callout bs-callout-info\">\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className=\"text-danger\" key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FieldHelpProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = `${idSchema.$id}__help`;\n  if (typeof help === \"string\") {\n    return (\n      <p id={id} className=\"help-block\">\n        {help}\n      </p>\n    );\n  }\n  return (\n    <div id={id} className=\"help-block\">\n      {help}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  getTemplate,\n  getUiOptions,\n} from \"@rjsf/utils\";\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<\"TitleFieldTemplate\", T, S, F>(\n    \"TitleFieldTemplate\",\n    registry,\n    options\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, options);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {(options.title || title) && (\n        <TitleFieldTemplate\n          id={`${idSchema.$id}__title`}\n          title={options.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(options.description || description) && (\n        <DescriptionFieldTemplate\n          id={`${idSchema.$id}__description`}\n          description={options.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand(schema, uiSchema, formData) && (\n        <AddButton\n          className=\"object-property-expand\"\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  TitleFieldProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nconst REQUIRED_FIELD_SYMBOL = \"*\";\n\n/** The `TitleField` is the template to use to render the title of a field\n *\n * @param props - The `TitleFieldProps` for this component\n */\nexport default function TitleField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: TitleFieldProps<T, S, F>) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </legend>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  UnsupportedFieldProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: UnsupportedFieldProps<T, S, F>) {\n  const { schema, idSchema, reason } = props;\n  return (\n    <div className=\"unsupported-field\">\n      <p>\n        Unsupported field schema\n        {idSchema && idSchema.$id && (\n          <span>\n            {\" for\"} field <code>{idSchema.$id}</code>\n          </span>\n        )}\n        {reason && <em>: {reason}</em>}.\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n","import React from \"react\";\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WrapIfAdditionalTemplateProps,\n} from \"@rjsf/utils\";\n\nimport Label from \"./FieldTemplate/Label\";\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    disabled,\n    label,\n    onKeyChange,\n    onDropPropertyClick,\n    readonly,\n    required,\n    schema,\n    children,\n    uiSchema,\n    registry,\n  } = props;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = registry.templates.ButtonTemplates;\n  const keyLabel = `${label} Key`; // i18n ?\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return <div className={classNames}>{children}</div>;\n  }\n\n  return (\n    <div className={classNames}>\n      <div className=\"row\">\n        <div className=\"col-xs-5 form-additional\">\n          <div className=\"form-group\">\n            <Label label={keyLabel} required={required} id={`${id}-key`} />\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className=\"form-additional form-group col-xs-5\">{children}</div>\n        <div className=\"col-xs-2\">\n          <RemoveButton\n            className=\"array-item-remove btn-block\"\n            style={{ border: \"0\" }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nimport ArrayFieldDescriptionTemplate from \"./ArrayFieldDescriptionTemplate\";\nimport ArrayFieldItemTemplate from \"./ArrayFieldItemTemplate\";\nimport ArrayFieldTemplate from \"./ArrayFieldTemplate\";\nimport ArrayFieldTitleTemplate from \"./ArrayFieldTitleTemplate\";\nimport BaseInputTemplate from \"./BaseInputTemplate\";\nimport ButtonTemplates from \"./ButtonTemplates\";\nimport DescriptionField from \"./DescriptionField\";\nimport ErrorList from \"./ErrorList\";\nimport FieldTemplate from \"./FieldTemplate\";\nimport FieldErrorTemplate from \"./FieldErrorTemplate\";\nimport FieldHelpTemplate from \"./FieldHelpTemplate\";\nimport ObjectFieldTemplate from \"./ObjectFieldTemplate\";\nimport TitleField from \"./TitleField\";\nimport UnsupportedField from \"./UnsupportedField\";\nimport WrapIfAdditionalTemplate from \"./WrapIfAdditionalTemplate\";\n\nfunction templates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F> {\n  return {\n    ArrayFieldDescriptionTemplate,\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    ArrayFieldTitleTemplate,\n    ButtonTemplates: ButtonTemplates<T, S, F>(),\n    BaseInputTemplate,\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldTemplate,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    UnsupportedFieldTemplate: UnsupportedField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default templates;\n","import React, { MouseEvent, useCallback, useEffect, useReducer } from \"react\";\n\nimport {\n  parseDateString,\n  toDateString,\n  pad,\n  DateObject,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction rangeOptions(start: number, stop: number) {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state: DateObject) {\n  return Object.values(state).every((value) => value !== -1);\n}\n\nfunction dateElementProps(\n  state: DateObject,\n  time: boolean,\n  yearsRange: [number, number] = [1900, new Date().getFullYear() + 2]\n) {\n  const { year, month, day, hour, minute, second } = state;\n  const data = [\n    {\n      type: \"year\",\n      range: yearsRange,\n      value: year,\n    },\n    { type: \"month\", range: [1, 12], value: month },\n    { type: \"day\", range: [1, 31], value: day },\n  ] as { type: string; range: [number, number]; value: number | undefined }[];\n  if (time) {\n    data.push(\n      { type: \"hour\", range: [0, 23], value: hour },\n      { type: \"minute\", range: [0, 59], value: minute },\n      { type: \"second\", range: [0, 59], value: second }\n    );\n  }\n  return data;\n}\n\ntype DateElementProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> = Pick<\n  WidgetProps<T, S, F>,\n  | \"value\"\n  | \"disabled\"\n  | \"readonly\"\n  | \"autofocus\"\n  | \"registry\"\n  | \"onBlur\"\n  | \"onFocus\"\n> & {\n  rootId: string;\n  select: (property: keyof DateObject, value: any) => void;\n  type: string;\n  range: [number, number];\n};\n\nfunction DateElement<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  type,\n  range,\n  value,\n  select,\n  rootId,\n  disabled,\n  readonly,\n  autofocus,\n  registry,\n  onBlur,\n  onFocus,\n}: DateElementProps<T, S, F>) {\n  const id = rootId + \"_\" + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: \"integer\" } as S}\n      id={id}\n      className=\"form-control\"\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={(value: any) => select(type as keyof DateObject, value)}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      registry={registry}\n      label=\"\"\n    />\n  );\n}\n\n/** The `AltDateWidget` is an alternative widget for rendering date properties.\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  time = false,\n  disabled = false,\n  readonly = false,\n  autofocus = false,\n  options,\n  id,\n  registry,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n}: WidgetProps<T, S, F>) {\n  const [state, setState] = useReducer(\n    (state: DateObject, action: Partial<DateObject>) => {\n      return { ...state, ...action };\n    },\n    parseDateString(value, time)\n  );\n\n  useEffect(() => {\n    if (value && value !== toDateString(state, time)) {\n      setState(parseDateString(value, time));\n    }\n  }, [value, state, time]);\n\n  useEffect(() => {\n    if (readyForChange(state)) {\n      // Only propagate to parent state if we have a complete date{time}\n      onChange(toDateString(state, time));\n    }\n  }, [state, time, onChange]);\n\n  const handleChange = useCallback(\n    (property: keyof DateObject, value: string) => {\n      setState({ [property]: value });\n    },\n    []\n  );\n\n  const handleSetNow = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      const nowDateObj = parseDateString(new Date().toJSON(), time);\n      setState(nowDateObj);\n    },\n    [disabled, readonly, time]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      setState(parseDateString(\"\", time));\n      onChange(undefined);\n    },\n    [disabled, readonly, time, onChange]\n  );\n\n  return (\n    <ul className=\"list-inline\">\n      {dateElementProps(\n        state,\n        time,\n        options.yearsRange as [number, number] | undefined\n      ).map((elemProps, i) => (\n        <li key={i}>\n          <DateElement\n            rootId={id}\n            select={handleChange}\n            {...elemProps}\n            disabled={disabled}\n            readonly={readonly}\n            registry={registry}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            autofocus={autofocus && i === 0}\n          />\n        </li>\n      ))}\n      {(options.hideNowButton !== \"undefined\"\n        ? !options.hideNowButton\n        : true) && (\n        <li>\n          <a href=\"#\" className=\"btn btn-info btn-now\" onClick={handleSetNow}>\n            Now\n          </a>\n        </li>\n      )}\n      {(options.hideClearButton !== \"undefined\"\n        ? !options.hideClearButton\n        : true) && (\n        <li>\n          <a\n            href=\"#\"\n            className=\"btn btn-warning btn-clear\"\n            onClick={handleClear}\n          >\n            Clear\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default AltDateWidget;\n","import {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport React from \"react\";\n\n/** The `AltDateTimeWidget` is an alternative widget for rendering datetime properties.\n *  It uses the AltDateWidget for rendering, with the `time` prop set to true by default.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ time = true, ...props }: WidgetProps<T, S, F>) {\n  const { AltDateWidget } = props.registry.widgets;\n  return <AltDateWidget time={time} {...props} />;\n}\n\nexport default AltDateTimeWidget;\n","import React, { useCallback } from \"react\";\nimport {\n  getTemplate,\n  schemaRequiresTrueValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  schema,\n  uiSchema,\n  options,\n  id,\n  value,\n  disabled,\n  readonly,\n  label,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, options);\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue(schema);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) =>\n      onChange(event.target.checked),\n    [onChange]\n  );\n\n  const handleBlur = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) =>\n      onBlur(id, event.target.checked),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) =>\n      onFocus(id, event.target.checked),\n    [onFocus, id]\n  );\n\n  return (\n    <div className={`checkbox ${disabled || readonly ? \"disabled\" : \"\"}`}>\n      {schema.description && (\n        <DescriptionFieldTemplate\n          id={id + \"__description\"}\n          description={schema.description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <label>\n        <input\n          type=\"checkbox\"\n          id={id}\n          name={id}\n          checked={typeof value === \"undefined\" ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n        />\n        <span>{label}</span>\n      </label>\n    </div>\n  );\n}\n\nexport default CheckboxWidget;\n","import React, { ChangeEvent } from \"react\";\nimport {\n  FormContextType,\n  WidgetProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nfunction selectValue(value: any, selected: any[], all: any[]) {\n  const at = all.indexOf(value);\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\n  // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n  return updated.sort((a, b) => Number(all.indexOf(a) > all.indexOf(b)));\n}\n\nfunction deselectValue(value: any, selected: any[]) {\n  return selected.filter((v) => v !== value);\n}\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxesWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  disabled,\n  options: { inline = false, enumOptions, enumDisabled },\n  value,\n  autofocus = false,\n  readonly,\n  onChange,\n}: WidgetProps<T, S, F>) {\n  return (\n    <div className=\"checkboxes\" id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, index) => {\n          const checked = value.indexOf(option.value) !== -1;\n          const itemDisabled =\n            Array.isArray(enumDisabled) &&\n            enumDisabled.indexOf(option.value) != -1;\n          const disabledCls =\n            disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n\n          const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const all = enumOptions.map(({ value }) => value);\n            if (event.target.checked) {\n              onChange(selectValue(option.value, value, all));\n            } else {\n              onChange(deselectValue(option.value, value));\n            }\n          };\n\n          const checkbox = (\n            <span>\n              <input\n                type=\"checkbox\"\n                id={`${id}-${option.value}`}\n                name={id}\n                checked={checked}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={handleChange}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n          return inline ? (\n            <label\n              key={option.value}\n              className={`checkbox-inline ${disabledCls}`}\n            >\n              {checkbox}\n            </label>\n          ) : (\n            <div key={option.value} className={`checkbox ${disabledCls}`}>\n              <label>{checkbox}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default CheckboxesWidget;\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `ColorWidget` component uses the `BaseInputTemplate` changing the type to `color` and disables it when it is\n * either disabled or readonly.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function ColorWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { disabled, readonly, options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return (\n    <BaseInputTemplate\n      type=\"color\"\n      {...props}\n      disabled={disabled || readonly}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `DateWidget` component uses the `BaseInputTemplate` changing the type to `date` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  const handleChange = useCallback(\n    (value: React.ChangeEvent) => onChange(value || undefined),\n    [onChange]\n  );\n\n  return <BaseInputTemplate type=\"date\" {...props} onChange={handleChange} />;\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  localToUTC,\n  utcToLocal,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `DateTimeWidget` component uses the `BaseInputTemplate` changing the type to `datetime-local` and transforms\n * the value to/from utc using the appropriate utility functions.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return (\n    <BaseInputTemplate\n      type=\"datetime-local\"\n      {...props}\n      value={utcToLocal(value)}\n      onChange={(value) => onChange(localToUTC(value))}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `EmailWidget` component uses the `BaseInputTemplate` changing the type to `email`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function EmailWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"email\" {...props} />;\n}\n","import React, { ChangeEvent, useCallback, useMemo, useState } from \"react\";\n\nimport {\n  dataURItoBlob,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction addNameToDataURL(dataURL: string, name: string) {\n  if (dataURL === null) {\n    return null;\n  }\n  return dataURL.replace(\";base64\", `;name=${encodeURIComponent(name)};base64`);\n}\n\ntype FileInfoType = {\n  dataURL?: string | null;\n  name: string;\n  size: number;\n  type: string;\n};\n\nfunction processFile(file: File): Promise<FileInfoType> {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader();\n    reader.onerror = reject;\n    reader.onload = (event) => {\n      if (typeof event.target?.result === \"string\") {\n        resolve({\n          dataURL: addNameToDataURL(event.target.result, name),\n          name,\n          size,\n          type,\n        });\n      } else {\n        resolve({\n          dataURL: null,\n          name,\n          size,\n          type,\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files: FileList) {\n  return Promise.all(Array.from(files).map(processFile));\n}\n\nfunction FilesInfo({\n  filesInfo,\n}: {\n  filesInfo: { name: string; size: number; type: string }[];\n}) {\n  if (filesInfo.length === 0) {\n    return null;\n  }\n  return (\n    <ul className=\"file-info\">\n      {filesInfo.map((fileInfo, key) => {\n        const { name, size, type } = fileInfo;\n        return (\n          <li key={key}>\n            <strong>{name}</strong> ({type}, {size} bytes)\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction extractFileInfo(dataURLs: string[]) {\n  return dataURLs\n    .filter((dataURL) => typeof dataURL !== \"undefined\")\n    .map((dataURL) => {\n      const { blob, name } = dataURItoBlob(dataURL);\n      return {\n        name: name,\n        size: blob.size,\n        type: blob.type,\n      };\n    });\n}\n\n/**\n *  The `FileWidget` is a widget for rendering file upload fields.\n *  It is typically used with a string property with data-url format.\n */\nfunction FileWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  multiple,\n  id,\n  readonly,\n  disabled,\n  onChange,\n  value,\n  autofocus = false,\n  options,\n}: WidgetProps<T, S, F>) {\n  const extractedFilesInfo = useMemo(\n    () =>\n      Array.isArray(value) ? extractFileInfo(value) : extractFileInfo([value]),\n    [value]\n  );\n  const [filesInfo, setFilesInfo] =\n    useState<FileInfoType[]>(extractedFilesInfo);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (!event.target.files) {\n        return;\n      }\n      processFiles(event.target.files).then((filesInfoEvent) => {\n        setFilesInfo(filesInfoEvent);\n        const newValue = filesInfoEvent.map((fileInfo) => fileInfo.dataURL);\n        if (multiple) {\n          onChange(newValue);\n        } else {\n          onChange(newValue[0]);\n        }\n      });\n    },\n    [multiple, onChange]\n  );\n\n  return (\n    <div>\n      <p>\n        <input\n          id={id}\n          name={id}\n          type=\"file\"\n          disabled={readonly || disabled}\n          onChange={handleChange}\n          defaultValue=\"\"\n          autoFocus={autofocus}\n          multiple={multiple}\n          accept={options.accept ? String(options.accept) : undefined}\n        />\n      </p>\n      <FilesInfo filesInfo={filesInfo} />\n    </div>\n  );\n}\n\nexport default FileWidget;\n","import React from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `HiddenWidget` is a widget for rendering a hidden input field.\n *  It is typically used by setting type to \"hidden\".\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction HiddenWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, value }: WidgetProps<T, S, F>) {\n  return (\n    <input\n      type=\"hidden\"\n      id={id}\n      name={id}\n      value={typeof value === \"undefined\" ? \"\" : value}\n    />\n  );\n}\n\nexport default HiddenWidget;\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `PasswordWidget` component uses the `BaseInputTemplate` changing the type to `password`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function PasswordWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"password\" {...props} />;\n}\n","import React, { FocusEvent, useCallback } from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction RadioWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  id,\n}: WidgetProps<T, S, F>) {\n  // Generating a unique field name to identify this set of radio buttons\n  const name = Math.random().toString();\n  const { enumOptions, enumDisabled, inline } = options;\n  // checked={checked} has been moved above name={name}, As mentioned in #349;\n  // this is a temporary fix for radio button rendering bug in React, facebook/react#7630.\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onBlur(id, event.target.value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onFocus(id, event.target.value),\n    [onFocus, id]\n  );\n\n  return (\n    <div className=\"field-radio-group\" id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, i) => {\n          const checked = option.value === value;\n          const itemDisabled =\n            Array.isArray(enumDisabled) &&\n            enumDisabled.indexOf(option.value) != -1;\n          const disabledCls =\n            disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n\n          const handleChange = () => onChange(option.value);\n\n          const radio = (\n            <span>\n              <input\n                type=\"radio\"\n                id={`${id}-${option.value}`}\n                checked={checked}\n                name={name}\n                required={required}\n                value={option.value}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && i === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n\n          return inline ? (\n            <label key={option.value} className={`radio-inline ${disabledCls}`}>\n              {radio}\n            </label>\n          ) : (\n            <div key={option.value} className={`radio ${disabledCls}`}>\n              <label>{radio}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default RadioWidget;\n","import React from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\n * in a div, with the value along side it.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RangeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    value,\n    registry: {\n      templates: { BaseInputTemplate },\n    },\n  } = props;\n  return (\n    <div className=\"field-range-wrapper\">\n      <BaseInputTemplate type=\"range\" {...props} />\n      <span className=\"range-view\">{value}</span>\n    </div>\n  );\n}\n","import React, { ChangeEvent, FocusEvent, useCallback } from \"react\";\nimport {\n  processSelectValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction getValue(\n  event: React.SyntheticEvent<HTMLSelectElement>,\n  multiple: boolean\n) {\n  if (multiple) {\n    return Array.from((event.target as HTMLSelectElement).options)\n      .slice()\n      .filter((o) => o.selected)\n      .map((o) => o.value);\n  }\n  return (event.target as HTMLSelectElement).value;\n}\n\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction SelectWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  schema,\n  id,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  multiple = false,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled } = options;\n  const emptyValue = multiple ? [] : \"\";\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onFocus(id, processSelectValue(schema, newValue, options));\n    },\n    [onFocus, id, schema, multiple, options]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onBlur(id, processSelectValue(schema, newValue, options));\n    },\n    [onBlur, id, schema, multiple, options]\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onChange(processSelectValue(schema, newValue, options));\n    },\n    [onChange, schema, multiple, options]\n  );\n\n  return (\n    <select\n      id={id}\n      name={id}\n      multiple={multiple}\n      className=\"form-control\"\n      value={typeof value === \"undefined\" ? emptyValue : value}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n    >\n      {!multiple && schema.default === undefined && (\n        <option value=\"\">{placeholder}</option>\n      )}\n      {Array.isArray(enumOptions) &&\n        enumOptions.map(({ value, label }, i) => {\n          const disabled = enumDisabled && enumDisabled.indexOf(value) != -1;\n          return (\n            <option key={i} value={value} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n    </select>\n  );\n}\n\nexport default SelectWidget;\n","import React, { FocusEvent, useCallback } from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLTextAreaElement>) =>\n      onChange(value === \"\" ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) =>\n      onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) =>\n      onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className=\"form-control\"\n      value={value ? value : \"\"}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `TextWidget` component uses the `BaseInputTemplate`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate {...props} />;\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `URLWidget` component uses the `BaseInputTemplate` changing the type to `url`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function URLWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"url\" {...props} />;\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `UpDownWidget` component uses the `BaseInputTemplate` changing the type to `number`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function UpDownWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"number\" {...props} />;\n}\n","import {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport AltDateWidget from \"./AltDateWidget\";\nimport AltDateTimeWidget from \"./AltDateTimeWidget\";\nimport CheckboxWidget from \"./CheckboxWidget\";\nimport CheckboxesWidget from \"./CheckboxesWidget\";\nimport ColorWidget from \"./ColorWidget\";\nimport DateWidget from \"./DateWidget\";\nimport DateTimeWidget from \"./DateTimeWidget\";\nimport EmailWidget from \"./EmailWidget\";\nimport FileWidget from \"./FileWidget\";\nimport HiddenWidget from \"./HiddenWidget\";\nimport PasswordWidget from \"./PasswordWidget\";\nimport RadioWidget from \"./RadioWidget\";\nimport RangeWidget from \"./RangeWidget\";\nimport SelectWidget from \"./SelectWidget\";\nimport TextareaWidget from \"./TextareaWidget\";\nimport TextWidget from \"./TextWidget\";\nimport URLWidget from \"./URLWidget\";\nimport UpDownWidget from \"./UpDownWidget\";\n\nfunction widgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    PasswordWidget,\n    RadioWidget,\n    UpDownWidget,\n    RangeWidget,\n    SelectWidget,\n    TextWidget,\n    DateWidget,\n    DateTimeWidget,\n    AltDateWidget,\n    AltDateTimeWidget,\n    EmailWidget,\n    URLWidget,\n    TextareaWidget,\n    HiddenWidget,\n    ColorWidget,\n    FileWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n  };\n}\n\nexport default widgets;\n","import {\n  FormContextType,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport fields from \"./components/fields\";\nimport templates from \"./components/templates\";\nimport widgets from \"./components/widgets\";\n\n/** The default registry consists of all the fields, templates and widgets provided in the core implementation,\n * plus an empty `rootSchema` and `formContext. We omit schemaUtils here because it cannot be defaulted without a\n * rootSchema and validator. It will be added into the computed registry later in the Form.\n */\nexport default function getDefaultRegistry<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Omit<Registry<T, S, F>, \"schemaUtils\"> {\n  return {\n    fields: fields<T, S, F>(),\n    templates: templates<T, S, F>(),\n    widgets: widgets<T, S, F>(),\n    rootSchema: {} as S,\n    formContext: {} as F,\n  };\n}\n","import React, { Component } from \"react\";\nimport {\n  createSchemaUtils,\n  CustomValidator,\n  deepEquals,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  GenericObjectType,\n  getTemplate,\n  getUiOptions,\n  IdSchema,\n  isObject,\n  mergeObjects,\n  NAME_KEY,\n  PathSchema,\n  StrictRJSFSchema,\n  Registry,\n  RegistryFieldsType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  RJSFValidationError,\n  RJSF_ADDITONAL_PROPERTIES_FLAG,\n  SchemaUtilsType,\n  shouldRender,\n  TemplatesType,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n} from \"@rjsf/utils\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _pick from \"lodash/pick\";\n\nimport getDefaultRegistry from \"../getDefaultRegistry\";\n\n/** The properties that are passed to the `Form` */\nexport interface FormProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** An implementation of the `ValidatorType` interface that is needed for form validation to work */\n  validator: ValidatorType<T, S>;\n  /** The optional children for the form, if provided, it will replace the default `SubmitButton` */\n  children?: React.ReactNode;\n  /** The uiSchema for the form */\n  uiSchema?: UiSchema<T, S, F>;\n  /** The data for the form, used to prefill a form with existing data */\n  formData?: T;\n  // Form presentation and behavior modifiers\n  /** You can provide a `formContext` object to the form, which is passed down to all fields and widgets. Useful for\n   * implementing context aware fields and widgets.\n   *\n   * NOTE: Setting `{readonlyAsDisabled: false}` on the formContext will make the antd theme treat readOnly fields as\n   * disabled.\n   */\n  formContext?: F;\n  /** To avoid collisions with existing ids in the DOM, it is possible to change the prefix used for ids;\n   * Default is `root`\n   */\n  idPrefix?: string;\n  /** To avoid using a path separator that is present in field names, it is possible to change the separator used for\n   * ids (Default is `_`)\n   */\n  idSeparator?: string;\n  /** It's possible to disable the whole form by setting the `disabled` prop. The `disabled` prop is then forwarded down\n   * to each field of the form. If you just want to disable some fields, see the `ui:disabled` parameter in `uiSchema`\n   */\n  disabled?: boolean;\n  /** It's possible to make the whole form read-only by setting the `readonly` prop. The `readonly` prop is then\n   * forwarded down to each field of the form. If you just want to make some fields read-only, see the `ui:readonly`\n   * parameter in `uiSchema`\n   */\n  readonly?: boolean;\n  // Form registry\n  /** The dictionary of registered fields in the form */\n  fields?: RegistryFieldsType<T, S, F>;\n  /** The dictionary of registered templates in the form; Partial allows a subset to be provided beyond the defaults */\n  templates?: Partial<Omit<TemplatesType<T, S, F>, \"ButtonTemplates\">> & {\n    ButtonTemplates?: Partial<TemplatesType<T, S, F>[\"ButtonTemplates\"]>;\n  };\n  /** The dictionary of registered widgets in the form */\n  widgets?: RegistryWidgetsType<T, S, F>;\n  // Callbacks\n  /** If you plan on being notified every time the form data are updated, you can pass an `onChange` handler, which will\n   * receive the same args as `onSubmit` any time a value is updated in the form. Can also return the `id` of the field\n   * that caused the change\n   */\n  onChange?: (data: IChangeEvent<T, S, F>, id?: string) => void;\n  /** To react when submitted form data are invalid, pass an `onError` handler. It will be passed the list of\n   * encountered errors\n   */\n  onError?: (errors: RJSFValidationError[]) => void;\n  /** You can pass a function as the `onSubmit` prop of your `Form` component to listen to when the form is submitted\n   * and its data are valid. It will be passed a result object having a `formData` attribute, which is the valid form\n   * data you're usually after. The original event will also be passed as a second parameter\n   */\n  onSubmit?: (data: IChangeEvent<T, S, F>, event: React.FormEvent<any>) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been touched, so you can pass\n   * an `onBlur` handler, which will receive the id of the input that was blurred and the field value\n   */\n  onBlur?: (id: string, data: any) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been focused, so you can pass\n   * an `onFocus` handler, which will receive the id of the input that is focused and the field value\n   */\n  onFocus?: (id: string, data: any) => void;\n  // <form /> HTML attributes\n  /** The value of this prop will be passed to the `accept-charset` HTML attribute on the form */\n  acceptcharset?: string;\n  /** The value of this prop will be passed to the `action` HTML attribute on the form\n   *\n   * NOTE: this just renders the `action` attribute in the HTML markup. There is no real network request being sent to\n   * this `action` on submit. Instead, react-jsonschema-form catches the submit event with `event.preventDefault()`\n   * and then calls the `onSubmit` function, where you could send a request programmatically with `fetch` or similar.\n   */\n  action?: string;\n  /** The value of this prop will be passed to the `autocomplete` HTML attribute on the form */\n  autoComplete?: string;\n  /** The value of this prop will be passed to the `class` HTML attribute on the form */\n  className?: string;\n  /** The value of this prop will be passed to the `enctype` HTML attribute on the form */\n  enctype?: string;\n  /** The value of this prop will be passed to the `id` HTML attribute on the form */\n  id?: string;\n  /** The value of this prop will be passed to the `name` HTML attribute on the form */\n  name?: string;\n  /** The value of this prop will be passed to the `method` HTML attribute on the form */\n  method?: string;\n  /** It's possible to change the default `form` tag name to a different HTML tag, which can be helpful if you are\n   * nesting forms. However, native browser form behaviour, such as submitting when the `Enter` key is pressed, may no\n   * longer work\n   */\n  tagName?: React.ElementType;\n  /** The value of this prop will be passed to the `target` HTML attribute on the form */\n  target?: string;\n  // Errors and validation\n  /** Formerly the `validate` prop; Takes a function that specifies custom validation rules for the form */\n  customValidate?: CustomValidator<T>;\n  /** This prop allows passing in custom errors that are augmented with the existing JSON Schema errors on the form; it\n   * can be used to implement asynchronous validation\n   */\n  extraErrors?: ErrorSchema<T>;\n  /** If set to true, turns off HTML5 validation on the form; Set to `false` by default */\n  noHtml5Validate?: boolean;\n  /** If set to true, turns off all validation. Set to `false` by default\n   *\n   * @deprecated - In a future release, this switch may be replaced by making `validator` prop optional\n   */\n  noValidate?: boolean;\n  /** If set to true, the form will perform validation and show any validation errors whenever the form data is changed,\n   * rather than just on submit\n   */\n  liveValidate?: boolean;\n  /** If `omitExtraData` and `liveOmit` are both set to true, then extra form data values that are not in any form field\n   * will be removed whenever `onChange` is called. Set to `false` by default\n   */\n  liveOmit?: boolean;\n  /** If set to true, then extra form data values that are not in any form field will be removed whenever `onSubmit` is\n   * called. Set to `false` by default.\n   */\n  omitExtraData?: boolean;\n  /** When this prop is set to `top` or 'bottom', a list of errors (or the custom error list defined in the `ErrorList`) will also\n   * show. When set to false, only inline input validation errors will be shown. Set to `top` by default\n   */\n  showErrorList?: false | \"top\" | \"bottom\";\n  /** A function can be passed to this prop in order to make modifications to the default errors resulting from JSON\n   * Schema validation\n   */\n  transformErrors?: ErrorTransformer;\n  // Private\n  /**\n   * _internalFormWrapper is currently used by the semantic-ui theme to provide a custom wrapper around `<Form />`\n   * that supports the proper rendering of those themes. To use this prop, one must pass a component that takes two\n   * props: `children` and `as`. That component, at minimum, should render the `children` inside of a <form /> tag\n   * unless `as` is provided, in which case, use the `as` prop in place of `<form />`.\n   * i.e.:\n   * ```\n   * export default function InternalForm({ children, as }) {\n   *   const FormTag = as || 'form';\n   *   return <FormTag>{children}</FormTag>;\n   * }\n   * ```\n   *\n   * Use at your own risk as this prop is private and may change at any time without notice.\n   */\n  _internalFormWrapper?: React.ElementType;\n}\n\n/** The data that is contained within the state for the `Form` */\nexport interface FormState<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** The uiSchema for the form */\n  uiSchema: UiSchema<T, S, F>;\n  /** The `IdSchema` for the form, computed from the `schema`, the `rootFieldId`, the `formData` and the `idPrefix` and\n   * `idSeparator` props.\n   */\n  idSchema: IdSchema<T>;\n  /** The schemaUtils implementation used by the `Form`, created from the `validator` and the `schema` */\n  schemaUtils: SchemaUtilsType<T, S, F>;\n  /** The current data for the form, computed from the `formData` prop and the changes made by the user */\n  formData: T;\n  /** Flag indicating whether the form is in edit mode, true when `formData` is passed to the form, otherwise false */\n  edit: boolean;\n  /** The current list of errors for the form, includes `extraErrors` */\n  errors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form, includes `extraErrors` */\n  errorSchema: ErrorSchema<T>;\n  /** The current list of errors for the form directly from schema validation, does NOT include `extraErrors` */\n  schemaValidationErrors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form directly from schema validation, does NOT include\n   * `extraErrors`\n   */\n  schemaValidationErrorSchema: ErrorSchema<T>;\n}\n\n/** The event data passed when changes have been made to the form, includes everything from the `FormState` except\n * the schema validation errors. An additional `status` is added when returned from `onSubmit`\n */\nexport interface IChangeEvent<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Omit<\n    FormState<T, S, F>,\n    \"schemaValidationErrors\" | \"schemaValidationErrorSchema\"\n  > {\n  /** The status of the form when submitted */\n  status?: \"submitted\";\n}\n\n/** The `Form` component renders the outer form and all the fields defined in the `schema` */\nexport default class Form<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FormProps<T, S, F>, FormState<T, S, F>> {\n  /** The ref used to hold the `form` element, this needs to be `any` because `tagName` or `_internalFormWrapper` can\n   * provide any possible type here\n   */\n  formElement: React.RefObject<any>;\n\n  /** Constructs the `Form` from the `props`. Will setup the initial state from the props. It will also call the\n   * `onChange` handler if the initially provided `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param props - The initial props for the `Form`\n   */\n  constructor(props: FormProps<T, S, F>) {\n    super(props);\n\n    if (!props.validator) {\n      throw new Error(\"A validator is required for Form functionality to work\");\n    }\n\n    this.state = this.getStateFromProps(props, props.formData);\n    if (\n      this.props.onChange &&\n      !deepEquals(this.state.formData, this.props.formData)\n    ) {\n      this.props.onChange(this.state);\n    }\n    this.formElement = React.createRef();\n  }\n\n  /** React lifecycle method that gets called before new props are provided, updates the state based on new props. It\n   * will also call the`onChange` handler if the `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param nextProps - The new set of props about to be applied to the `Form`\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps<T, S, F>) {\n    const nextState = this.getStateFromProps(nextProps, nextProps.formData);\n    if (\n      !deepEquals(nextState.formData, nextProps.formData) &&\n      !deepEquals(nextState.formData, this.state.formData) &&\n      nextProps.onChange\n    ) {\n      nextProps.onChange(nextState);\n    }\n    this.setState(nextState);\n  }\n\n  /** Extracts the updated state from the given `props` and `inputFormData`. As part of this process, the\n   * `inputFormData` is first processed to add any missing required defaults. After that, the data is run through the\n   * validation process IF required by the `props`.\n   *\n   * @param props - The props passed to the `Form`\n   * @param inputFormData - The new or current data for the `Form`\n   * @returns - The new state for the `Form`\n   */\n  getStateFromProps(\n    props: FormProps<T, S, F>,\n    inputFormData?: T\n  ): FormState<T, S, F> {\n    const state: FormState<T, S, F> = this.state || {};\n    const schema = \"schema\" in props ? props.schema : this.props.schema;\n    const uiSchema: UiSchema<T, S, F> =\n      (\"uiSchema\" in props ? props.uiSchema! : this.props.uiSchema!) || {};\n    const edit = typeof inputFormData !== \"undefined\";\n    const liveValidate =\n      \"liveValidate\" in props ? props.liveValidate : this.props.liveValidate;\n    const mustValidate = edit && !props.noValidate && liveValidate;\n    const rootSchema = schema;\n    let schemaUtils: SchemaUtilsType<T, S> = state.schemaUtils;\n    if (\n      !schemaUtils ||\n      schemaUtils.doesSchemaUtilsDiffer(props.validator, rootSchema)\n    ) {\n      schemaUtils = createSchemaUtils<T, S, F>(props.validator, rootSchema);\n    }\n    const formData: T = schemaUtils.getDefaultFormState(\n      schema,\n      inputFormData\n    ) as T;\n    const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n\n    const getCurrentErrors = (): ValidationData<T> => {\n      if (props.noValidate) {\n        return { errors: [], errorSchema: {} };\n      } else if (!props.liveValidate) {\n        return {\n          errors: state.schemaValidationErrors || [],\n          errorSchema: state.schemaValidationErrorSchema || {},\n        };\n      }\n      return {\n        errors: state.errors || [],\n        errorSchema: state.errorSchema || {},\n      };\n    };\n\n    let errors: RJSFValidationError[];\n    let errorSchema: ErrorSchema<T> | undefined;\n    let schemaValidationErrors: RJSFValidationError[] =\n      state.schemaValidationErrors;\n    let schemaValidationErrorSchema: ErrorSchema<T> =\n      state.schemaValidationErrorSchema;\n    if (mustValidate) {\n      const schemaValidation = this.validate(formData, schema, schemaUtils);\n      errors = schemaValidation.errors;\n      errorSchema = schemaValidation.errorSchema;\n      schemaValidationErrors = errors;\n      schemaValidationErrorSchema = errorSchema;\n    } else {\n      const currentErrors = getCurrentErrors();\n      errors = currentErrors.errors;\n      errorSchema = currentErrors.errorSchema;\n    }\n    if (props.extraErrors) {\n      const merged = schemaUtils.mergeValidationData(\n        { errorSchema, errors },\n        props.extraErrors\n      );\n      errorSchema = merged.errorSchema;\n      errors = merged.errors;\n    }\n    const idSchema = schemaUtils.toIdSchema(\n      retrievedSchema,\n      uiSchema[\"ui:rootFieldId\"],\n      formData,\n      props.idPrefix,\n      props.idSeparator\n    );\n    const nextState: FormState<T, S, F> = {\n      schemaUtils,\n      schema,\n      uiSchema,\n      idSchema,\n      formData,\n      edit,\n      errors,\n      errorSchema,\n      schemaValidationErrors,\n      schemaValidationErrorSchema,\n    };\n    return nextState;\n  }\n\n  /** React lifecycle method that is used to determine whether component should be updated.\n   *\n   * @param nextProps - The next version of the props\n   * @param nextState - The next version of the state\n   * @returns - True if the component should be updated, false otherwise\n   */\n  shouldComponentUpdate(\n    nextProps: FormProps<T, S, F>,\n    nextState: FormState<T, S, F>\n  ): boolean {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  /** Validates the `formData` against the `schema` using the `altSchemaUtils` (if provided otherwise it uses the\n   * `schemaUtils` in the state), returning the results.\n   *\n   * @param formData - The new form data to validate\n   * @param schema - The schema used to validate against\n   * @param altSchemaUtils - The alternate schemaUtils to use for validation\n   */\n  validate(\n    formData: T,\n    schema = this.props.schema,\n    altSchemaUtils?: SchemaUtilsType<T, S>\n  ): ValidationData<T> {\n    const schemaUtils = altSchemaUtils\n      ? altSchemaUtils\n      : this.state.schemaUtils;\n    const { customValidate, transformErrors } = this.props;\n    const resolvedSchema = schemaUtils.retrieveSchema(schema, formData);\n    return schemaUtils\n      .getValidator()\n      .validateFormData(\n        formData,\n        resolvedSchema,\n        customValidate,\n        transformErrors\n      );\n  }\n\n  /** Renders any errors contained in the `state` in using the `ErrorList`, if not disabled by `showErrorList`. */\n  renderErrors(registry: Registry<T, S, F>) {\n    const { errors, errorSchema, schema, uiSchema } = this.state;\n    const { formContext } = this.props;\n    const options = getUiOptions<T, S, F>(uiSchema);\n    const ErrorListTemplate = getTemplate<\"ErrorListTemplate\", T, S, F>(\n      \"ErrorListTemplate\",\n      registry,\n      options\n    );\n\n    if (errors && errors.length) {\n      return (\n        <ErrorListTemplate\n          errors={errors}\n          errorSchema={errorSchema || {}}\n          schema={schema}\n          uiSchema={uiSchema}\n          formContext={formContext}\n        />\n      );\n    }\n    return null;\n  }\n\n  /** Returns the `formData` with only the elements specified in the `fields` list\n   *\n   * @param formData - The data for the `Form`\n   * @param fields - The fields to keep while filtering\n   */\n  getUsedFormData = (formData: T, fields: string[][]): T => {\n    // For the case of a single input form\n    if (fields.length === 0 && typeof formData !== \"object\") {\n      return formData;\n    }\n\n    // _pick has incorrect type definition, it works with string[][], because lodash/hasIn supports it\n    const data: GenericObjectType = _pick(\n      formData,\n      fields as unknown as string[]\n    );\n    if (Array.isArray(formData)) {\n      return Object.keys(data).map((key: string) => data[key]) as unknown as T;\n    }\n\n    return data as T;\n  };\n\n  /** Returns the list of field names from inspecting the `pathSchema` as well as using the `formData`\n   *\n   * @param pathSchema - The `PathSchema` object for the form\n   * @param formData - The form data to use while checking for empty objects/arrays\n   */\n  getFieldNames = (pathSchema: PathSchema<T>, formData: T): string[][] => {\n    const getAllPaths = (\n      _obj: GenericObjectType,\n      acc: string[][] = [],\n      paths: string[][] = [[]]\n    ) => {\n      Object.keys(_obj).forEach((key: string) => {\n        if (typeof _obj[key] === \"object\") {\n          const newPaths = paths.map((path) => [...path, key]);\n          // If an object is marked with additionalProperties, all its keys are valid\n          if (\n            _obj[key][RJSF_ADDITONAL_PROPERTIES_FLAG] &&\n            _obj[key][NAME_KEY] !== \"\"\n          ) {\n            acc.push(_obj[key][NAME_KEY]);\n          } else {\n            getAllPaths(_obj[key], acc, newPaths);\n          }\n        } else if (key === NAME_KEY && _obj[key] !== \"\") {\n          paths.forEach((path) => {\n            const formValue = _get(formData, path);\n            // adds path to fieldNames if it points to a value\n            // or an empty object/array\n            if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\n              acc.push(path);\n            }\n          });\n        }\n      });\n      return acc;\n    };\n\n    return getAllPaths(pathSchema);\n  };\n\n  /** Function to handle changes made to a field in the `Form`. This handler receives an entirely new copy of the\n   * `formData` along with a new `ErrorSchema`. It will first update the `formData` with any missing default fields and\n   * then, if `omitExtraData` and `liveOmit` are turned on, the `formData` will be filterer to remove any extra data not\n   * in a form field. Then, the resulting formData will be validated if required. The state will be updated with the new\n   * updated (potentially filtered) `formData`, any errors that resulted from validation. Finally the `onChange`\n   * callback will be called if specified with the updated state.\n   *\n   * @param formData - The new form data from a change to a field\n   * @param newErrorSchema - The new `ErrorSchema` based on the field change\n   * @param id - The id of the field that caused the change\n   */\n  onChange = (formData: T, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n    const {\n      extraErrors,\n      omitExtraData,\n      liveOmit,\n      noValidate,\n      liveValidate,\n      onChange,\n    } = this.props;\n    const { schemaUtils, schema } = this.state;\n    if (isObject(formData) || Array.isArray(formData)) {\n      const newState = this.getStateFromProps(this.props, formData);\n      formData = newState.formData;\n    }\n\n    const mustValidate = !noValidate && liveValidate;\n    let state: Partial<FormState<T, S, F>> = { formData, schema };\n    let newFormData = formData;\n\n    if (omitExtraData === true && liveOmit === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n      const pathSchema = schemaUtils.toPathSchema(\n        retrievedSchema,\n        \"\",\n        formData\n      );\n\n      const fieldNames = this.getFieldNames(pathSchema, formData);\n\n      newFormData = this.getUsedFormData(formData, fieldNames);\n      state = {\n        formData: newFormData,\n      };\n    }\n\n    if (mustValidate) {\n      const schemaValidation = this.validate(newFormData);\n      let errors = schemaValidation.errors;\n      let errorSchema = schemaValidation.errorSchema;\n      const schemaValidationErrors = errors;\n      const schemaValidationErrorSchema = errorSchema;\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(\n          schemaValidation,\n          extraErrors\n        );\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      state = {\n        formData: newFormData,\n        errors,\n        errorSchema,\n        schemaValidationErrors,\n        schemaValidationErrorSchema,\n      };\n    } else if (!noValidate && newErrorSchema) {\n      const errorSchema = extraErrors\n        ? (mergeObjects(\n            newErrorSchema,\n            extraErrors,\n            \"preventDuplicates\"\n          ) as ErrorSchema<T>)\n        : newErrorSchema;\n      state = {\n        formData: newFormData,\n        errorSchema: errorSchema,\n        errors: schemaUtils.getValidator().toErrorList(errorSchema),\n      };\n    }\n    this.setState(\n      state as FormState<T, S, F>,\n      () => onChange && onChange({ ...this.state, ...state }, id)\n    );\n  };\n\n  /** Callback function to handle when a field on the form is blurred. Calls the `onBlur` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was blurred\n   * @param data - The data associated with the field that was blurred\n   */\n  onBlur = (id: string, data: any) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(id, data);\n    }\n  };\n\n  /** Callback function to handle when a field on the form is focused. Calls the `onFocus` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was focused\n   * @param data - The data associated with the field that was focused\n   */\n  onFocus = (id: string, data: any) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(id, data);\n    }\n  };\n\n  /** Callback function to handle when the form is submitted. First, it prevents the default event behavior. Nothing\n   * happens if the target and currentTarget of the event are not the same. It will omit any extra data in the\n   * `formData` in the state if `omitExtraData` is true. It will validate the resulting `formData`, reporting errors\n   * via the `onError()` callback unless validation is disabled. Finally it will add in any `extraErrors` and then call\n   * back the `onSubmit` callback if it was provided.\n   *\n   * @param event - The submit HTML form event\n   */\n  onSubmit = (event: React.FormEvent<any>) => {\n    event.preventDefault();\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    event.persist();\n    const { omitExtraData, extraErrors, noValidate, onSubmit } = this.props;\n    let { formData: newFormData } = this.state;\n    const { schema, schemaUtils } = this.state;\n\n    if (omitExtraData === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, newFormData);\n      const pathSchema = schemaUtils.toPathSchema(\n        retrievedSchema,\n        \"\",\n        newFormData\n      );\n\n      const fieldNames = this.getFieldNames(pathSchema, newFormData);\n\n      newFormData = this.getUsedFormData(newFormData, fieldNames);\n    }\n\n    if (noValidate || this.validateForm()) {\n      // There are no errors generated through schema validation.\n      // Check for user provided errors and update state accordingly.\n      const errorSchema = extraErrors || {};\n      const errors = extraErrors\n        ? schemaUtils.getValidator().toErrorList(extraErrors)\n        : [];\n      this.setState(\n        {\n          formData: newFormData,\n          errors,\n          errorSchema,\n          schemaValidationErrors: [],\n          schemaValidationErrorSchema: {},\n        },\n        () => {\n          if (onSubmit) {\n            onSubmit(\n              { ...this.state, formData: newFormData, status: \"submitted\" },\n              event\n            );\n          }\n        }\n      );\n    }\n  };\n\n  /** Returns the registry for the form */\n  getRegistry(): Registry<T, S, F> {\n    const { schemaUtils } = this.state;\n    const { fields, templates, widgets, formContext } = getDefaultRegistry<\n      T,\n      S,\n      F\n    >();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      templates: {\n        ...templates,\n        ...this.props.templates,\n        ButtonTemplates: {\n          ...templates.ButtonTemplates,\n          ...this.props.templates?.ButtonTemplates,\n        },\n      },\n      widgets: { ...widgets, ...this.props.widgets },\n      rootSchema: this.props.schema,\n      formContext: this.props.formContext || formContext,\n      schemaUtils,\n    };\n  }\n\n  /** Provides a function that can be used to programmatically submit the `Form` */\n  submit() {\n    if (this.formElement.current) {\n      this.formElement.current.dispatchEvent(\n        new CustomEvent(\"submit\", {\n          cancelable: true,\n        })\n      );\n      this.formElement.current.requestSubmit();\n    }\n  }\n\n  /** Programmatically validate the form. If `onError` is provided, then it will be called with the list of errors the\n   * same way as would happen on form submission.\n   *\n   * @returns - True if the form is valid, false otherwise.\n   */\n  validateForm() {\n    const { extraErrors, onError } = this.props;\n    const { formData } = this.state;\n    const { schemaUtils } = this.state;\n    const schemaValidation = this.validate(formData);\n    let errors = schemaValidation.errors;\n    let errorSchema = schemaValidation.errorSchema;\n    const schemaValidationErrors = errors;\n    const schemaValidationErrorSchema = errorSchema;\n    if (errors.length > 0) {\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(\n          schemaValidation,\n          extraErrors\n        );\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      this.setState(\n        {\n          errors,\n          errorSchema,\n          schemaValidationErrors,\n          schemaValidationErrorSchema,\n        },\n        () => {\n          if (onError) {\n            onError(errors);\n          } else {\n            console.error(\"Form validation failed\", errors);\n          }\n        }\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** Renders the `Form` fields inside the <form> | `tagName` or `_internalFormWrapper`, rendering any errors if\n   * needed along with the submit button or any children of the form.\n   */\n  render() {\n    const {\n      children,\n      id,\n      idPrefix,\n      idSeparator,\n      className = \"\",\n      tagName,\n      name,\n      method,\n      target,\n      action,\n      autoComplete,\n      enctype,\n      acceptcharset,\n      noHtml5Validate = false,\n      disabled = false,\n      readonly = false,\n      formContext,\n      showErrorList = \"top\",\n      _internalFormWrapper,\n    } = this.props;\n\n    const { schema, uiSchema, formData, errorSchema, idSchema } = this.state;\n    const registry = this.getRegistry();\n    const { SchemaField: _SchemaField } = registry.fields;\n    const { SubmitButton } = registry.templates.ButtonTemplates;\n    // The `semantic-ui` and `material-ui` themes have `_internalFormWrapper`s that take an `as` prop that is the\n    // PropTypes.elementType to use for the inner tag, so we'll need to pass `tagName` along if it is provided.\n    // NOTE, the `as` prop is native to `semantic-ui` and is emulated in the `material-ui` theme\n    const as = _internalFormWrapper ? tagName : undefined;\n    const FormTag = _internalFormWrapper || tagName || \"form\";\n\n    return (\n      <FormTag\n        className={className ? className : \"rjsf\"}\n        id={id}\n        name={name}\n        method={method}\n        target={target}\n        action={action}\n        autoComplete={autoComplete}\n        encType={enctype}\n        acceptCharset={acceptcharset}\n        noValidate={noHtml5Validate}\n        onSubmit={this.onSubmit}\n        as={as}\n        ref={this.formElement}\n      >\n        {showErrorList === \"top\" && this.renderErrors(registry)}\n        <_SchemaField\n          name=\"\"\n          schema={schema}\n          uiSchema={uiSchema}\n          errorSchema={errorSchema}\n          idSchema={idSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          formContext={formContext}\n          formData={formData}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n        />\n        {children ? children : <SubmitButton uiSchema={uiSchema} />}\n        {showErrorList === \"bottom\" && this.renderErrors(registry)}\n      </FormTag>\n    );\n  }\n}\n","import React, { ForwardedRef, forwardRef } from \"react\";\n\nimport Form, { FormProps } from \"./components/Form\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\n/** The properties for the `withTheme` function, essentially a subset of properties from the `FormProps` that can be\n * overridden while creating a theme\n */\nexport type ThemeProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> = Pick<\n  FormProps<T, S, F>,\n  \"fields\" | \"templates\" | \"widgets\" | \"_internalFormWrapper\"\n> & {\n  ref?: React.Ref<Form<T, S, F>>;\n};\n\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(themeProps: ThemeProps<T, S, F>) {\n  return forwardRef(\n    (\n      { fields, widgets, templates, ...directProps }: FormProps<T, S, F>,\n      ref: ForwardedRef<Form<T, S, F>>\n    ) => {\n      fields = { ...themeProps.fields, ...fields };\n      widgets = { ...themeProps.widgets, ...widgets };\n      templates = {\n        ...themeProps.templates,\n        ...templates,\n        ButtonTemplates: {\n          ...themeProps?.templates?.ButtonTemplates,\n          ...templates?.ButtonTemplates,\n        },\n      };\n\n      return (\n        <Form<T, S, F>\n          {...themeProps}\n          {...directProps}\n          fields={fields}\n          widgets={widgets}\n          templates={templates}\n          ref={ref}\n        />\n      );\n    }\n  );\n}\n"],"names":["generateRowId","nanoid","generateKeyedFormData","formData","Array","isArray","map","item","key","keyedToPlainFormData","keyedFormData","keyedItem","ArrayField","props","_getNewFormDataRow","schema","registry","schemaUtils","itemSchema","items","isFixedItems","allowAdditionalItems","additionalItems","getDefaultFormState","onAddClick","event","preventDefault","onChange","state","newKeyedFormDataRow","newKeyedFormData","setState","updatedKeyedFormData","onAddIndexClick","index","splice","onDropIndexClick","errorSchema","newErrorSchema","idx","i","parseInt","set","filter","_","onReorderClick","newIndex","currentTarget","blur","reOrderArray","_newKeyedFormData","slice","onChangeForIndex","value","id","arrayData","newFormData","jsonValue","onSelectChange","idSchema","undefined","$id","getDerivedStateFromProps","nextProps","prevState","nextFormData","previousKeyedFormData","length","previousKeyedFormDatum","isItemRequired","type","includes","canAddItem","formItems","uiSchema","getUiOptions","addable","maxItems","render","ITEMS_KEY","uiOptions","UnsupportedFieldTemplate","getTemplate","React","reason","isMultiSelect","renderMultiSelect","isCustomWidget","renderCustomWidget","renderFixedArray","isFilesArray","renderFiles","renderNormalArray","name","disabled","readonly","autofocus","required","onBlur","onFocus","idPrefix","idSeparator","rawErrors","title","formContext","_schemaItems","isObject","itemsSchema","retrieveSchema","arrayProps","canAdd","itemCast","itemErrorSchema","itemIdPrefix","itemIdSchema","toIdSchema","renderArrayFieldItem","canMoveUp","canMoveDown","itemData","itemUiSchema","className","Template","createElement","hideError","placeholder","widgets","widget","options","_excluded","Widget","getWidget","multiple","label","enumOptions","optionsList","itemSchemas","additionalSchema","concat","additional","canRemove","fields","ArraySchemaField","SchemaField","ItemSchemaField","orderable","removable","has","moveUp","moveDown","remove","toolbar","Object","keys","some","children","hasToolbar","hasMoveUp","hasMoveDown","hasRemove","get","Component","BooleanField","oneOf","option","o","schemaWithEnumNames","enums","enumNames","every","v","AnyOfField","onOptionChange","selectedOption","newOption","guessType","properties","assign","optionsToDiscard","unset","getFieldId","getMatchingOption","componentDidUpdate","prevProps","deepEquals","matchingOption","baseType","_SchemaField","optionSchema","trailingCharMatcherWithPrefix","trailingCharMatcher","NumberField","initialValue","useState","lastValue","setLastValue","StringField","handleChange","useCallback","charAt","processed","match","asNumber","replace","re","RegExp","ObjectField","wasPropertyKeyModified","additionalProperties","onPropertyChange","addedByAdditionalProperties","onDropPropertyClick","copiedFormData","getAvailableKey","preferredKey","duplicateKeySuffixSeparator","newKey","onKeyChange","oldValue","newKeys","keyValues","renamedObj","handleAddClick","REF_KEY","refSchema","$ref","getDefaultValue","isRequired","indexOf","rawSchema","schemaProperties","description","orderedProperties","orderProperties","order","err","style","color","message","JSON","stringify","templateProps","PROPERTIES_KEY","ADDITIONAL_PROPERTY_FLAG","fieldUiSchema","hidden","fieldIdSchema","content","COMPONENT_TYPES","array","integer","number","object","string","getFieldComponent","field","schemaType","getSchemaType","componentName","anyOf","SchemaFieldRender","_schema","_idSchema","FieldTemplate","DescriptionFieldTemplate","FieldHelpTemplate","FieldErrorTemplate","fieldId","ID_KEY","mergeObjects","handleFieldComponentChange","theId","FieldComponent","Boolean","readOnly","uiSchemaHideError","displayLabel","getDisplayLabel","__errors","fieldErrorSchema","omit","help","classNames","push","console","warn","helpComponent","hasErrors","errorsComponent","errors","fieldProps","rawDescription","rawHelp","join","trim","_AnyOfField","_OneOfField","OneOfField","Fragment","isSelect","shouldComponentUpdate","format","defaultWidget","hasWidget","NullField","useEffect","MultiSchemaField","ArrayFieldDescriptionTemplate","ArrayFieldItemTemplate","templates","ButtonTemplates","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","flex","paddingLeft","paddingRight","fontWeight","display","justifyContent","onClick","ArrayFieldTemplate","ArrayFieldTitleTemplate","AddButton","itemProps","TitleFieldTemplate","BaseInputTemplate","rest","log","Error","inputProps","getInputProps","inputValue","_onChange","target","emptyValue","_onBlur","_onFocus","autoFocus","list","examples","Set","example","SubmitButton","getSubmitButtonOptions","submitText","norender","submitButtonProps","IconButton","iconType","icon","otherProps","buttonTemplates","DescriptionField","ErrorList","error","stack","REQUIRED_FIELD_SYMBOL","Label","htmlFor","WrapIfAdditionalTemplate","elem","ObjectFieldTemplate","prop","canExpand","TitleField","UnsupportedField","keyLabel","defaultValue","border","ErrorListTemplate","rangeOptions","start","stop","pad","readyForChange","values","dateElementProps","time","yearsRange","Date","getFullYear","year","month","day","hour","minute","second","data","range","DateElement","select","rootId","SelectWidget","AltDateWidget","useReducer","action","parseDateString","toDateString","property","handleSetNow","nowDateObj","toJSON","handleClear","elemProps","hideNowButton","href","hideClearButton","AltDateTimeWidget","CheckboxWidget","schemaRequiresTrueValue","checked","handleBlur","handleFocus","selectValue","selected","all","at","updated","sort","a","b","Number","deselectValue","CheckboxesWidget","inline","enumDisabled","itemDisabled","disabledCls","checkbox","ColorWidget","DateWidget","DateTimeWidget","utcToLocal","localToUTC","EmailWidget","addNameToDataURL","dataURL","encodeURIComponent","processFile","file","size","Promise","resolve","reject","reader","window","FileReader","onerror","onload","result","readAsDataURL","processFiles","files","from","FilesInfo","filesInfo","fileInfo","extractFileInfo","dataURLs","dataURItoBlob","blob","FileWidget","extractedFilesInfo","useMemo","setFilesInfo","then","filesInfoEvent","newValue","accept","String","HiddenWidget","PasswordWidget","RadioWidget","Math","random","toString","radio","RangeWidget","getValue","processSelectValue","TextareaWidget","rows","defaultProps","TextWidget","URLWidget","UpDownWidget","getDefaultRegistry","rootSchema","Form","formElement","getUsedFormData","_pick","getFieldNames","pathSchema","getAllPaths","_obj","acc","paths","forEach","newPaths","path","RJSF_ADDITONAL_PROPERTIES_FLAG","NAME_KEY","formValue","_get","_isEmpty","extraErrors","omitExtraData","liveOmit","noValidate","liveValidate","newState","getStateFromProps","mustValidate","retrievedSchema","toPathSchema","fieldNames","schemaValidation","validate","schemaValidationErrors","schemaValidationErrorSchema","merged","mergeValidationData","getValidator","toErrorList","onSubmit","persist","validateForm","status","validator","createRef","UNSAFE_componentWillReceiveProps","nextState","inputFormData","edit","doesSchemaUtilsDiffer","createSchemaUtils","getCurrentErrors","currentErrors","shouldRender","altSchemaUtils","customValidate","transformErrors","resolvedSchema","validateFormData","renderErrors","getRegistry","submit","current","dispatchEvent","CustomEvent","cancelable","requestSubmit","onError","tagName","method","autoComplete","enctype","acceptcharset","noHtml5Validate","showErrorList","_internalFormWrapper","as","FormTag","encType","acceptCharset","ref","withTheme","themeProps","forwardRef","directProps"],"mappings":"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"}